{"version":3,"sources":["Components/Subjects Managements/LongMenu.js","Components/SideMenuBar.js","Components/Subjects Managements/AddTopics.js","Components/Subjects Managements/AddChapters.js","Components/Subjects Managements/AddSubjects.js","Components/Subjects Managements/SubjectsManagement.js","Components/Subjects Managements/EditSubject.js","Components/Subjects Managements/EditChapter.js","Components/Subjects Managements/EditTopic.js","Components/MiniCards.js","Components/AdminDashboard.js","Components/Settings.js","Components/ReportMenu.js","Components/Reports.js","Components/Login.js","Components/Register.js","Components/Courses Managements/CoursesLongMenu.js","Components/Courses Managements/CoursesManagement.js","Components/Courses Managements/AddCourses.js","Components/Courses Managements/AddCourseTopics.js","Components/Courses Managements/EditCourse.js","Components/Courses Managements/EditCourseTopic.js","App.js","reportWebVitals.js","index.js"],"names":["MenuPopupState","props","history","useHistory","AddChapter","a","push","pathname","subjectname","subjectorder","subjectid","error","swal","AddTopic","chapterid","chaptername","chapterindex","DeleteSubject","subjecturl","axios","delete","data","setTimeout","window","location","reload","DeleteChapter","chapterurl","DeleteTopic","topicurl","topicid","EditSubject","subjectsem","subjectcourse","subjectbranch","state","subjectthumburl","EditChapter","chapterorder","variant","popupId","popupState","Fragment","className","bindTrigger","Menu","bindMenu","MenuItem","onClick","close","adddata","editdata","topicname","topicorder","topicdescription","topicthumburl","topicindex","EditTopic","deletedata","SideMenuBar","useLocation","onSelect","selected","to","Toggle","Nav","style","paddingTop","eventKey","fontSize","icon","faHome","faBookReader","faGraduationCap","faFlag","faCog","React","memo","AddTopics","useParams","useState","Loading","SetLoading","Topic_Name","Topic_Order","Topic_Description","Topic_Url","Topic_ImgUrl","Topics","SetTopics","TopicsData","SetTopicsData","seturl","showurl","useEffect","get","GetTopics","Chapters","TopicData","fetchData","submit","e","preventDefault","put","addTopic","target","id","value","Container","fluid","Card","Body","backgroundColor","paddingBottom","paddingLeft","color","Form","onSubmit","Row","Group","as","Col","Label","Control","type","onChange","placeholder","required","min","readOnly","height","width","Table","striped","bordered","hover","size","responsive","map","i","_id","Image","src","thumbnail","AddChapters","Chapter_Name","Chapter_Order","Subject_Name","Subject_Order","Chapter","SetChapter","ChapterData","SetChapterData","GetChapters","ChaptersData","addChapter","Chapterdata","AddSubjects","Cookies","Subject_imgurl","Subject_Semester","Subject_Course","Subject_Branch","Subject","SetSubject","post","addSubject","subjectdata","max","SubjectsManagement","Subjects","SetSubjects","Search","SetSearch","SearchData","SetSearchData","SubjectsInfo","filterData","lowercasedValue","toLowerCase","trim","filteredData","filter","item","Object","keys","some","key","toString","includes","InputGroup","FormControl","index","UpdateSubject","SetUpdateSubject","update","patch","EditChapters","UpdateChapterData","SetUpdateChapterData","UpdateChapter","EditTopics","UpdateTopic","SetUpdateTopic","updatetopic","MiniCard","margin","borderRadius","display","justifyContent","alignItems","marginLeft","faVideo","borderLeft","textAlign","Title","fontWeight","Text","number","AdminDashboard","flexWrap","Settings","Reports","Login","email_address","password","Admin","SetAdmin","CheckAdmin","adminExist","experiydate","Date","setTime","getTime","set","Token","path","expires","AdminExist","AdminData","padding","Register","cpassword","RegisterAdmin","SetRegisterAdmin","register","AddAdmin","addAdmin","paddingRight","pattern","EditCourse","courseid","coursename","courseorder","coursetype","coursedescription","coursethumburl","coursetypethumburl","DeleteCourse","courseurl","coursetopicurl","coursetopicid","coursetopicname","coursetopicorder","coursetopicdescription","coursetopicthumburl","CoursesManagement","Courses","SetCourses","CoursesInfo","lowerCasedValue","Courses_Name","Courses_ImgUrl","Courses_Type","Courses_Description","Courses_TypeImgUrl","Courses_Order","AddCourses","Course_Name","Course_Order","Course_Type","Course_ImgUrl","Course_TypeImgUrl","Course_Description","Course","SetCourse","addCourse","Coursedata","AddCourseTopics","Course_TopicName","Course_TopicOrder","Course_TopicDescription","Course_TopicUrl","Course_TopicImgUrl","CourseTopics","SetCourseTopics","CourseTopicsData","SetCourseTopicsData","GetCourseTopics","Courses_Topics","CourseTopicData","Courses_TopicName","Courses_TopicOrder","Courses_TopicDescription","Courses_TopicUrl","Courses_TopicImgUrl","addCourseTopic","coursetopicindex","EditCourses","updateCourse","updateCourseData","EditCourseTopic","updateCourseTopic","updateCourseTopics","App","exact","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8335dbb7.chunk.js","sourcesContent":["import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\n\n\nexport default function MenuPopupState(props) {\n\n    const history = useHistory();\n\n    // For Adding All Chapters And Topics\n\n    const AddChapter = async () => {\n        try {\n            history.push({\n                pathname: `/addchapter/${props.subjectname}/${props.subjectorder}/${props.subjectid}`\n            })\n        } catch (error) {\n            swal(\"Oops!\", \"Some Error Occur!\", \"error\");\n        }\n    }\n\n    const AddTopic = async () => {\n        try {\n            history.push({\n                pathname: `/addtopic/${props.subjectid}/${props.subjectname}/${props.subjectorder}/${props.chapterid}/${props.chaptername}/${props.chapterindex}`\n            })\n        } catch (error) {\n            swal(\"Oops!\", \"Some Error Occur!\", \"error\");\n        }\n    }\n\n\n    //  For Deleting Subject, Chapters And Topics\n\n    const DeleteSubject = async () => {\n        try {\n            const subjecturl = `https://enrollge.glitch.me/subject/${props.subjectid}`\n            const DeleteSubjectData = await axios.delete(subjecturl);\n            if (DeleteSubjectData.data) {\n                swal(\"Deleted!\", \"Subject is Successfully Deleted!\", \"success\");\n            }\n            setTimeout(() => {\n                window.location.reload();\n            }, 1000)\n\n        } catch (e) {\n            swal(\"Error!\", \"Subject is not Deleted!\", \"error\");\n        }\n    }\n    const DeleteChapter = async () => {\n        try {\n            const chapterurl = `https://enrollge.glitch.me/subjects/chapters/${props.subjectid}/${props.chapterid}`\n            const DeleteChapterData = await axios.delete(chapterurl);\n            if (DeleteChapterData.data) {\n                swal(\"Deleted!\", \"Chapter is Successfully Deleted!\", \"success\");\n            }\n            setTimeout(() => {\n                window.location.reload();\n            }, 1000)\n\n        } catch (e) {\n            swal(\"Error!\", \"Chapter is not Deleted!\", \"error\");\n        }\n    }\n    const DeleteTopic = async () => {\n        try {\n            const topicurl = `https://enrollge.glitch.me/subjects/chapters/topics/${props.subjectid}/${props.chapterid}/${props.topicid}`\n            const DeleteTopicData = await axios.delete(topicurl);\n            if (DeleteTopicData.data) {\n                swal(\"Deleted!\", \"Topic is Successfully Deleted!\", \"success\");\n            }\n            setTimeout(() => {\n                window.location.reload();\n            }, 1000)\n\n        } catch (e) {\n            swal(\"Error!\", \"Topic is not Deleted!\", \"error\");\n        }\n    }\n\n\n    // For Editing All Subject, Chapters And Topics\n    const EditSubject = async () => {\n        try {\n            history.push({\n                pathname: `/editsubject/${props.subjectid}/${props.subjectname}/${props.subjectorder}/${props.subjectsem}/${props.subjectcourse}/${props.subjectbranch}`,\n                state: {\n                    subjectthumburl: `${props.subjectthumburl}`\n                }\n            })\n        } catch (error) {\n            swal(\"Oops!\", \"Some Error Occur!\", \"error\");\n        }\n    }\n\n    const EditChapter = async () => {\n        try {\n            history.push(`/editchapter/${props.subjectid}/${props.chapterid}/${props.chaptername}/${props.chapterorder}/${props.subjectname}/${props.subjectorder}`)\n        } catch (error) {\n            swal(\"Oops!\", \"Some Error Occur!\", \"error\");\n        }\n    }\n\n    const EditTopic = () => {\n        try {\n            history.push({\n                pathname: `/edittopic/${props.topicname}/${props.topicorder}/${props.topicdescription}/${props.chaptername}/${props.subjectid}/${props.subjectname}/${props.subjectorder}/${props.chapterid}/${props.chapterindex}`,\n                state: {\n                    topicurl: `${props.topicurl}`,\n                    topicthumburl: `${props.topicthumburl}`,\n                    topicindex: `${props.topicindex}`\n                }\n            })\n        } catch (error) {\n            swal(\"Oops!\", \"Some Error Occur!\", \"error\");\n        }\n    }\n\n    return (\n        <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n            {(popupState) => (\n                <React.Fragment>\n                    <Link className=\"link_mini\" {...bindTrigger(popupState)}>...\n                    </Link>\n                    <Menu {...bindMenu(popupState)}>\n                        <MenuItem onClick={() => {\n                            popupState.close()\n                            if (props.adddata === \"Add Chapter\") {\n                                AddChapter();\n                            }\n\n                            if (props.adddata === \"Add Topic\") {\n                                AddTopic();\n                            }\n\n                        }}>{props.adddata}</MenuItem>\n                        <MenuItem onClick={() => {\n                            popupState.close()\n                            if (props.editdata === \"Edit Subject\") {\n                                EditSubject();\n                            }\n                            if (props.editdata === \"Edit Chapter\") {\n                                EditChapter();\n                            }\n                            if (props.editdata === \"Edit Topic\") {\n                                EditTopic();\n                            }\n                        }}>{props.editdata}</MenuItem>\n                        <MenuItem onClick={() => {\n                            popupState.close()\n                            if (props.deletedata === \"Delete Subject\") {\n                                DeleteSubject();\n                            }\n\n                            if (props.deletedata === \"Delete Chapter\") {\n                                DeleteChapter();\n                            }\n\n                            if (props.deletedata === \"Delete Topic\") {\n                                DeleteTopic();\n                            }\n                        }}>{props.deletedata}</MenuItem>\n                    </Menu>\n                </React.Fragment>\n            )}\n        </PopupState>\n    );\n}\n","import React from 'react';\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\n// Be sure to include styles at some point, probably during your bootstraping\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport { Fragment } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome, faBookReader, faFlag, faCog, faGraduationCap } from '@fortawesome/free-solid-svg-icons'\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst SideMenuBar = () => {\n    const history = useHistory();\n    const location = useLocation();\n    return (\n        <Fragment>\n            <header>\n                <div className=\"tophead\">\n                    <div className=\"brand-logo\">\n                        Enrollge\n                    </div>\n                </div>\n            </header>\n            <SideNav\n                onSelect={(selected) => {\n                    const to = '/' + selected;\n                    if (location.pathname !== to) {\n                        history.push(to);\n                    }\n                }}\n            >\n                <SideNav.Toggle className=\"nav-toggle\" />\n                <SideNav.Nav>\n                    <NavItem style={{ paddingTop: '1.8rem' }} eventKey=\"admindashboard\">\n                        <NavIcon>\n                            <FontAwesomeIcon style={{ fontSize: '1.75em' }} icon={faHome} />\n                        </NavIcon>\n                        <NavText>\n                            AdminDashboard\n                        </NavText>\n                    </NavItem>\n\n                    <NavItem eventKey=\"managesubjects\">\n                        <NavIcon>\n                            <FontAwesomeIcon style={{ fontSize: '1.75em' }} icon={faBookReader} />\n                        </NavIcon>\n                        <NavText>\n                            Manage Subjects\n                        </NavText>\n                    </NavItem>\n\n                    <NavItem eventKey=\"managecourses\">\n                        <NavIcon>\n                            <FontAwesomeIcon className=\"side_icons\" style={{ fontSize: '1.75em' }} icon={faGraduationCap} />\n                        </NavIcon>\n                        <NavText>\n                            Manage Courses\n                        </NavText>\n                    </NavItem>\n\n                    <NavItem eventKey=\"reports\">\n                        <NavIcon>\n                            <FontAwesomeIcon className=\"side_icons\" style={{ fontSize: '1.75em' }} icon={faFlag} />\n                        </NavIcon>\n                        <NavText>\n                            Reports\n                        </NavText>\n                    </NavItem>\n\n                    <NavItem eventKey=\"settings\">\n                        <NavIcon>\n                            <FontAwesomeIcon className=\"side_icons\" style={{ fontSize: '1.75em' }} icon={faCog} />\n                        </NavIcon>\n                        <NavText>\n                            Settings\n                        </NavText>\n                    </NavItem>\n\n                </SideNav.Nav>\n            </SideNav>\n        </Fragment>\n    );\n}\n\nexport default React.memo(SideMenuBar)\n","import axios from 'axios';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Container, Form, Card, Col, Table, Image } from 'react-bootstrap';\nimport { useParams, useHistory } from 'react-router-dom';\nimport LongMenu from \"./LongMenu\";\nimport swal from 'sweetalert';\nimport Loader from 'react-loader-spinner';\nimport SideMenuBar from '../SideMenuBar';\n\nconst AddTopics = (props) => {\n\n    // Here We Need to Three Props Object id of subject and chapter . Chapter Order\n\n    const { subjectid, chapterid, chapterindex, chaptername, subjectname, subjectorder } = useParams();\n\n    const history = useHistory();\n\n    const [Loading, SetLoading] = useState(false);\n\n    const [Topics, SetTopics] = useState({\n        Topic_Name: \"\",\n        Topic_Order: \"\",\n        Topic_Description: \"\",\n        Topic_Url: \"\",\n        Topic_ImgUrl: \"\"\n    });\n\n    const [TopicsData, SetTopicsData] = useState([]);\n\n    const seturl = `https://enrollge.glitch.me/subjects/chapters/topics/${subjectid}/${chapterid}`\n\n    const showurl = `https://enrollge.glitch.me/subject/${subjectid}`\n\n    useEffect(() => {\n        try {\n            SetLoading(false);\n            const fetchData = async () => {\n                const GetTopics = await axios.get(showurl)\n                const TopicData = await GetTopics.data[0].Chapters[chapterindex].Topics;\n                SetTopicsData(TopicData, SetLoading(true));\n            }\n            fetchData();\n        } catch (error) {\n            swal(\"Error\", \"Some Error Occurred\", 'error');\n        }\n    }, [])\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const AddTopic = await axios.put(seturl, {\n                Topic_Name: Topics.Topic_Name,\n                Topic_Order: Topics.Topic_Order,\n                Topic_Description: Topics.Topic_Description,\n                Topic_Url: Topics.Topic_Url,\n                Topic_ImgUrl: Topics.Topic_ImgUrl\n            });\n            if (AddTopic.data) {\n                swal(\"Added!\", \"Topic is Successfully Added!\", \"success\");\n            }\n            setTimeout(() => {\n                window.location.reload();\n            }, 1000)\n        } catch (error) {\n            swal(\"Error!\", \"Topic is not Added!\", \"error\");\n        }\n    }\n\n\n    const addTopic = async (e) => {\n        const TopicData = { ...Topics }\n        TopicData[e.target.id] = e.target.value;\n        SetTopics(TopicData);\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Topics</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"addsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push(`/addchapter/${subjectname}/${subjectorder}/${subjectid}`)\n                                        }}>\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Topic Details</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => submit(e)}>\n                                            <Form.Row>\n                                                <Form.Group as={Col}>\n                                                    <Form.Label>Topic Name</Form.Label>\n                                                    <Form.Control type=\"text\" onChange={(e) => addTopic(e)} id=\"Topic_Name\" value={Topics.Topic_Name} placeholder=\"Enter Topic Name\" required />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Topic Order</Form.Label>\n                                                    <Form.Control type=\"number\" min=\"0\" onChange={(e) => addTopic(e)} id=\"Topic_Order\" value={Topics.Topic_Order} placeholder=\"0 to 999\" required />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Topic Video Url</Form.Label>\n                                                    <Form.Control type=\"text\" onChange={(e) => addTopic(e)} id=\"Topic_Url\" value={Topics.Topic_Url} placeholder=\"Enter Topic Video Url\" required />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col}>\n                                                    <Form.Label>Topic Thumbnail Url</Form.Label>\n                                                    <Form.Control type=\"text\" onChange={(e) => addTopic(e)} id=\"Topic_ImgUrl\" value={Topics.Topic_ImgUrl} placeholder=\"Enter Topic Thumbnail Url\" required />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Group >\n                                                <Form.Label>Chapter Name</Form.Label>\n                                                <Form.Control type=\"text\" readOnly={true} value={chaptername} placeholder=\"Chapter Name\" />\n                                            </Form.Group>\n\n\n                                            <Form.Group >\n                                                <Form.Label>Topic Desciption</Form.Label>\n                                                <Form.Control as=\"textarea\" onChange={(e) => addTopic(e)} id=\"Topic_Description\" value={Topics.Topic_Description} type=\"text\" placeholder=\"Enter Topic Description\" required />\n                                            </Form.Group>\n\n\n                                            <button type=\"submit\">\n                                                Add Topic\n                                            </button>\n\n                                        </Form>\n                                    </div>\n                                    <br />\n                                    <hr />\n                                    <br />\n\n                                    {/* Topics Details */}\n\n                                    <div>\n                                        <div>\n                                            <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                                <text style={{ color: 'white' }}>All Topics</text>\n                                            </Card>\n                                        </div>\n                                        <hr />\n                                        {/* Loader Before Api Call */}\n                                        {!Loading && <div className=\"preloader\">\n                                            <Loader\n                                                type=\"Hearts\"\n                                                color=\"#202b58\"\n                                                height={60}\n                                                width={60}\n                                            />\n                                        </div>}\n                                        <Table striped bordered hover size=\"md\" responsive>\n                                            <thead>\n                                                <tr>\n                                                    <th>S.No</th>\n                                                    <th>###</th>\n                                                    <th>Thumbnail</th>\n                                                    <th>Name</th>\n                                                    <th>\n                                                        Video Url\n                                                    </th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    TopicsData.map((value, i) => {\n                                                        return (\n                                                            <tr>\n                                                                <td key={i}>{i + 1}</td>\n                                                                <td>\n                                                                    <LongMenu topicindex={i} topicname={value.Topic_Name} topicorder={value.Topic_Order} topicdescription={value.Topic_Description} chaptername={chaptername} topicurl={value.Topic_Url} topicthumburl={value.Topic_ImgUrl} subjectname={subjectname} chapterindex={chapterindex} subjectid={subjectid} chapterid={chapterid} topicid={value._id} deletedata=\"Delete Topic\" editdata=\"Edit Topic\" />\n                                                                </td>\n                                                                <td><Image style={{ height: '5rem', width: '5rem' }} src={value.Topic_ImgUrl} thumbnail /></td>\n                                                                <td>{value.Topic_Name}</td>\n                                                                <td>{value.Topic_Url}</td>\n                                                            </tr>\n                                                        );\n                                                    })\n                                                }\n                                            </tbody>\n                                        </Table>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(AddTopics);","import React, { Fragment, useState, useEffect } from 'react';\nimport { Card, Form, Container, Col, Table } from 'react-bootstrap';\nimport axios from \"axios\";\nimport LongMenu from \"./LongMenu\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport Loader from 'react-loader-spinner';\nimport SideMenuBar from '../SideMenuBar';\n\nconst AddChapters = () => {\n    const { subjectid, subjectname, subjectorder } = useParams();\n\n    const history = useHistory();\n\n    const [Loading, SetLoading] = useState(false);\n    const [Chapter, SetChapter] = useState({\n        Chapter_Name: \"\",\n        Chapter_Order: \"\",\n        Subject_Name: subjectname,\n        Subject_Order: subjectorder\n    })\n    const [ChapterData, SetChapterData] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                SetLoading(false)\n                const GetChapters = await axios.get(`https://enrollge.glitch.me/subject/${subjectid}`);\n                const ChaptersData = await GetChapters.data[0].Chapters\n                SetChapterData(ChaptersData, SetLoading(true))\n            } catch (error) {\n                swal(\"Error\", \"Some Error Occurred\", 'error');\n            }\n        }\n        fetchData();\n    }, [])\n\n    const AddChapter = async (e) => {\n        e.preventDefault();\n        try {\n            const AddChapterData = await axios.put(`https://enrollge.glitch.me/subjects/chapters/${subjectid}`, {\n                Chapter_Name: Chapter.Chapter_Name,\n                Chapter_Order: Chapter.Chapter_Order,\n                Subject_Name: Chapter.Subject_Name,\n                Subject_Order: Chapter.Subject_Order\n            })\n\n            if (AddChapterData.data) {\n                swal(\"Added!\", \"Chapter is Successfully Added!\", \"success\");\n            }\n            setTimeout(() => {\n                window.location.reload();\n            }, 2000)\n        } catch (eror) {\n            swal(\"Error!\", \"Chapter is not Added!\", \"error\");\n        }\n\n    }\n\n    const addChapter = (e) => {\n        const Chapterdata = { ...Chapter }\n        Chapterdata[e.target.id] = e.target.value\n        SetChapter(Chapterdata);\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Chapters</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"addsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push('/managesubjects')\n                                        }} >\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Chapter Details</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => AddChapter(e)} >\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Chapter Name</Form.Label>\n                                                    <Form.Control required={true} type=\"text\" id=\"Chapter_Name\" onChange={(e) => addChapter(e)} value={Chapter.Chapter_Name} placeholder=\"Enter Chapter Name\" />\n                                                </Form.Group>\n                                                <Form.Group as={Col}>\n                                                    <Form.Label>Chapter Order</Form.Label>\n                                                    <Form.Control required={true} type=\"number\" min=\"0\" id=\"Chapter_Order\" onChange={(e) => addChapter(e)} value={Chapter.Chapter_Order} placeholder=\"0 to 999\" />\n                                                </Form.Group>\n                                            </Form.Row>\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Subject Name</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Subject_Name\" readOnly={true} onChange={(e) => addChapter(e)} value={subjectname} placeholder=\"Enter Subject Name\" />\n                                                </Form.Group>\n                                                <Form.Group as={Col}>\n                                                    <Form.Label>Subject Order</Form.Label>\n                                                    <Form.Control type=\"number\" readOnly={true} id=\"Subject_Order\" onChange={(e) => addChapter(e)} value={subjectorder} placeholder=\"0 to 999\" />\n                                                </Form.Group>\n                                            </Form.Row>\n                                            <button type=\"submit\">\n                                                Add Chapter\n                                             </button>\n                                        </Form>\n                                    </div>\n                                    <br />\n                                    <hr />\n                                    <br />\n\n                                    {/* Chapters Details */}\n\n                                    <div>\n                                        <div>\n                                            <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                                <text style={{ color: 'white' }}>All Chapters of that Subject</text>\n                                            </Card>\n                                        </div>\n                                        <hr />\n                                        {/* Loader Before Api Call */}\n                                        {!Loading && <div className=\"preloader\" >\n                                            <Loader\n                                                type=\"Hearts\"\n                                                color=\"#202b58\"\n                                                height={60}\n                                                width={60}\n                                            />\n                                        </div>}\n\n                                        <Table striped bordered hover size=\"md\" responsive>\n                                            <thead>\n                                                <tr>\n                                                    <th>S.No</th>\n                                                    <th>###</th>\n                                                    <th>Chapter Name</th>\n                                                    <th>Chapter Order</th>\n                                                    <th>Subject Name</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    ChapterData.map((value, i) => {\n                                                        return (\n                                                            <tr>\n                                                                <td key={i}>{i + 1}</td>\n                                                                <td>\n                                                                    <LongMenu subjectname={subjectname} subjectorder={subjectorder} chapterindex={i} chaptername={value.Chapter_Name} chapterorder={value.Chapter_Order} chapterid={value._id} subjectid={subjectid} deletedata=\"Delete Chapter\" adddata=\"Add Topic\" editdata=\"Edit Chapter\" />\n                                                                </td>\n                                                                <td>{value.Chapter_Name}</td>\n                                                                <td>{value.Chapter_Order}</td>\n                                                                <td>{value.Subject_Name}</td>\n                                                            </tr>\n                                                        )\n                                                    })\n                                                }\n                                            </tbody>\n                                        </Table>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(AddChapters);","import axios from 'axios';\nimport React, { Fragment, useState } from 'react';\nimport { Card, Container, Form, Col } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\nimport Cookies from 'js-cookie';\n\n\nconst AddSubjects = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    const [Subject, SetSubject] = useState({\n        Subject_Name: \"\",\n        Subject_Order: \"\",\n        Subject_imgurl: \"\",\n        Subject_Semester: \"\",\n        Subject_Course: \"\",\n        Subject_Branch: \"\"\n    })\n\n    const url = \"https://enrollge.glitch.me/subjects\"\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const AddSubjectData = await axios.post(url, {\n                Subject_Name: Subject.Subject_Name,\n                Subject_Order: Subject.Subject_Order,\n                Subject_imgurl: Subject.Subject_imgurl,\n                Subject_Semester: Subject.Subject_Semester,\n                Subject_Course: Subject.Subject_Course,\n                Subject_Branch: Subject.Subject_Branch\n            })\n            if (AddSubjectData.data) {\n                swal(\"Addded!\", \"Subject is Successfully Added!\", \"success\");\n            }\n        } catch (error) {\n            swal(\"Not Added!\", \"Subject is Not Added!\", \"error\");\n        }\n    }\n\n    const addSubject = async (e) => {\n        // Here First Create an Object of SubjectData and attach with Subject State and Then fill values with Object Data with Target Values and then Set it On State.\n        const subjectdata = { ...Subject }\n        subjectdata[e.target.id] = await e.target.value\n        await SetSubject(subjectdata);\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Subject</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"addsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push('/managesubjects')\n                                        }} >\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Subject Details</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => submit(e)} >\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Subject Name</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} id=\"Subject_Name\" onChange={(e) => addSubject(e)} value={Subject.Subject_Name} placeholder=\"Enter Subject Name\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Subject Order</Form.Label>\n                                                    <Form.Control type=\"number\" required={true} min=\"0\" id=\"Subject_Order\" onChange={(e) => addSubject(e)} value={Subject.Subject_Order} placeholder=\"Enter Subject Order\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Subject Thumbnail Url</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} id=\"Subject_imgurl\" onChange={(e) => addSubject(e)} value={Subject.Subject_imgurl} placeholder=\"Enter Subject Thumbnail Url\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Subject Semester</Form.Label>\n                                                    <Form.Control type=\"number\" required={true} min=\"0\" max=\"6\" id=\"Subject_Semester\" onChange={(e) => addSubject(e)} value={Subject.Subject_Semester} placeholder=\"Enter Semester of Subject\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Subject Course</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Subject_Course\" required={true} onChange={(e) => addSubject(e)} value={Subject.Subject_Course} placeholder=\"Enter Course of Subject\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Subject Branch</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Subject_Branch\" required={true} onChange={(e) => addSubject(e)} value={Subject.Subject_Branch} placeholder=\"Enter Branch of Subject\" />\n                                                </Form.Group>\n                                            </Form.Row>\n                                            <button type=\"submit\">\n                                                Add Subject\n                                            </button>\n                                        </Form>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(AddSubjects);","import axios from 'axios';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Card, Image, Table, InputGroup, FormControl } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport LongMenu from './LongMenu';\nimport Loader from \"react-loader-spinner\";\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\nimport Cookies from \"js-cookie\";\n\nconst SubjectsManagement = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    const [Loading, SetLoading] = useState(false);\n    const [Subjects, SetSubjects] = useState([])\n    const [Search, SetSearch] = useState()\n    const [SearchData, SetSearchData] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                SetLoading(false);\n                const url = \"https://enrollge.glitch.me/subjects\"\n                const SubjectsInfo = await axios.get(url);\n                SetSubjects(SubjectsInfo.data);\n                SetSearchData(SubjectsInfo.data, SetLoading(true));\n            }\n            catch (error) {\n                swal(\"Error\", \"Some Error Occurred\", 'error');\n            }\n        }\n        fetchData();\n    }, []);\n\n    const handleChange = (value) => {\n        SetSearch(value);\n        filterData(value);\n    }\n\n    const filterData = (value) => {\n        const lowercasedValue = value.toLowerCase().trim();\n        if (lowercasedValue === \"\") {\n            SetSearchData(Subjects)\n        } else {\n            const filteredData = SearchData.filter(item => {\n                return Object.keys(item).some(key =>\n                    item[key].toString().toLowerCase().includes(lowercasedValue)\n                );\n            });\n            SetSearchData(filteredData)\n        }\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <div className=\"subjects_area\">\n                <div className=\"subjects_fdiv\">\n                    <Card className=\"subjects_fcard\">\n                        <Card.Body>\n                            <h1>Subjects Management</h1>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"subject_sdiv\">\n                    <Card className=\"subjects_scard\">\n                        <Card.Body>\n                            {/* Search Area Tab */}\n                            <div className=\"subjects_search\">\n                                <div>\n                                    <button className=\"main_btn\" onClick={() => {\n                                        history.push('/addsubject')\n                                    }}>Add Subject</button>\n                                </div>\n                                <div>\n                                    <InputGroup className=\"mb-2 input-area\">\n                                        <FormControl\n                                            className=\"mr-5\"\n                                            placeholder=\"Search Subject\"\n                                            value={Search}\n                                            onChange={(e) => handleChange(e.target.value)}\n                                        />\n\n                                    </InputGroup>\n\n                                </div>\n                            </div>\n                            <hr />\n                            {/* Loader Before Api Call */}\n                            {!Loading && <div className=\"preloader\">\n                                <Loader\n                                    type=\"Hearts\"\n                                    color=\"#202b58\"\n                                    height={60}\n                                    width={60}\n                                />\n                            </div>}\n                            {/* Subjects Details Table */}\n                            <Table striped bordered hover size=\"md\" responsive>\n\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>###</th>\n                                        <th>Thumbnail</th>\n                                        <th>Course of Subject</th>\n                                        <th>Branch of Subject </th>\n                                        <th>Subject Name</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        SearchData.map((value, index) => {\n                                            return (\n                                                <>\n                                                    <tr>\n                                                        <td key={index} >{index + 1}</td>\n                                                        <td><LongMenu subjectid={value._id} subjectname={value.Subject_Name} subjectsem={value.Subject_Semester} subjectthumburl={value.Subject_imgurl} subjectcourse={value.Subject_Course} subjectbranch={value.Subject_Branch} subjectorder={value.Subject_Order} deletedata=\"Delete Subject\" adddata=\"Add Chapter\" editdata=\"Edit Subject\" /></td>\n                                                        <td><Image style={{ height: '5rem', width: '5rem' }} src={value.Subject_imgurl} thumbnail /></td>\n                                                        <td>{value.Subject_Course}</td>\n                                                        <td>{value.Subject_Branch}</td>\n                                                        <td>{value.Subject_Name}</td>\n                                                    </tr>\n                                                </>\n                                            );\n                                        })\n                                    }\n                                </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default React.memo(SubjectsManagement);","import axios from 'axios';\nimport React, { Fragment, useState } from 'react';\nimport { Card, Container, Form, Col } from 'react-bootstrap';\nimport { useParams, useLocation, useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\n\n\n\nconst EditSubject = () => {\n\n    const { subjectid, subjectname, subjectorder, subjectsem, subjectcourse, subjectbranch } = useParams();\n    const location = useLocation();\n    const history = useHistory();\n\n    const [UpdateSubject, SetUpdateSubject] = useState({\n        Subject_Name: subjectname,\n        Subject_Order: subjectorder,\n        Subject_imgurl: location.state.subjectthumburl,\n        Subject_Semester: subjectsem,\n        Subject_Course: subjectcourse,\n        Subject_Branch: subjectbranch\n    })\n\n    const seturl = `https://enrollge.glitch.me/subjects/${subjectid}`\n\n    const update = async (e) => {\n        e.preventDefault();\n        try {\n            const UpdateSubjectData = await axios.patch(seturl, {\n                Subject_Name: UpdateSubject.Subject_Name,\n                Subject_Order: UpdateSubject.Subject_Order,\n                Subject_imgurl: UpdateSubject.Subject_imgurl,\n                Subject_Semester: UpdateSubject.Subject_Semester,\n                Subject_Course: UpdateSubject.Subject_Course,\n                Subject_Branch: UpdateSubject.Subject_Branch\n            })\n            if (UpdateSubjectData.data) {\n                swal(\"Updated!\", \"Subject is Successfully Updated!\", \"success\");\n            }\n        } catch (error) {\n            swal(\"Not Updated!\", \"Subject is Not Updated!\", \"error\");\n        }\n    }\n\n    const addSubject = async (e) => {\n        // Here First Create an Object of SubjectData and attach with Subject State and Then fill values with Object Data with Target Values and then Set it On State.\n        const subjectdata = { ...UpdateSubject }\n        subjectdata[e.target.id] = await e.target.value\n        await SetUpdateSubject(subjectdata);\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Subject</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"addsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push('/managesubjects')\n                                        }} >\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Subject Details</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => update(e)} >\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Subject Name</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Subject_Name\" onChange={(e) => addSubject(e)} value={UpdateSubject.Subject_Name} placeholder=\"Enter Subject Name\" required />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Subject Order</Form.Label>\n                                                    <Form.Control type=\"number\" min=\"0\" id=\"Subject_Order\" onChange={(e) => addSubject(e)} value={UpdateSubject.Subject_Order} placeholder=\"Enter Subject Order\" required />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Subject Thumbnail Url</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Subject_imgurl\" onChange={(e) => addSubject(e)} value={UpdateSubject.Subject_imgurl} placeholder=\"Enter Subject Thumbnail Url\" required />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Subject Semester</Form.Label>\n                                                    <Form.Control type=\"number\" min=\"0\" max=\"6\" id=\"Subject_Semester\" onChange={(e) => addSubject(e)} value={UpdateSubject.Subject_Semester} placeholder=\"Enter Semester of Subject\" required />\n                                                </Form.Group>\n                                            </Form.Row>\n\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Subject Course</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Subject_Course\" onChange={(e) => addSubject(e)} value={UpdateSubject.Subject_Course} placeholder=\"Enter Course of Subject\" required />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Subject Branch</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Subject_Branch\" onChange={(e) => addSubject(e)} value={UpdateSubject.Subject_Branch} placeholder=\"Enter Branch of Subject\" required />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <button type=\"submit\">\n                                                Update Subject\n                                            </button>\n\n                                        </Form>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(EditSubject);","import React, { Fragment, useState } from 'react';\nimport { Card, Form, Container, Col } from 'react-bootstrap';\nimport axios from \"axios\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\n\nconst EditChapters = () => {\n\n    const history = useHistory();\n    const { subjectid, chapterid, chaptername, chapterorder, subjectname, subjectorder } = useParams();\n\n    const [UpdateChapterData, SetUpdateChapterData] = useState({\n        'Chapter_Name': chaptername,\n        'Chapter_Order': chapterorder,\n        'Subject_Name': subjectname,\n        'Subject_Order': subjectorder\n    });\n\n    const seturl = `https://enrollge.glitch.me/subjects/chapters/${subjectid}/${chapterid}`\n\n    const UpdateChapter = async (e) => {\n        e.preventDefault();\n        try {\n            const UpdatingChapter = await axios.patch(seturl, {\n                \"Chapters.$.Chapter_Name\": UpdateChapterData.Chapter_Name,\n                \"Chapters.$.Chapter_Order\": UpdateChapterData.Chapter_Order\n            }\n            );\n\n            if (UpdatingChapter.data) {\n                swal(\"Updated!\", \"Chapter is Successfully Updated!\", \"success\");\n            }\n        } catch (eror) {\n            swal(\"Error!\", \"Chapter is not Updated!\", \"error\");\n        }\n    }\n\n    const addChapter = (e) => {\n        const Chapterdata = { ...UpdateChapterData }\n        Chapterdata[e.target.id] = e.target.value\n        SetUpdateChapterData(Chapterdata);\n    }\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"editsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Chapters</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"addsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push(`/addchapter/${subjectname}/${subjectorder}/${subjectid}`)\n                                        }} >\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Chapter Details</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => UpdateChapter(e)} >\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Chapter Name</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Chapter_Name\" value={UpdateChapterData.Chapter_Name} onChange={(e) => addChapter(e)} placeholder=\"Enter Chapter Name\" required />\n                                                </Form.Group>\n                                                <Form.Group as={Col}>\n                                                    <Form.Label>Chapter Order</Form.Label>\n                                                    <Form.Control type=\"number\" min=\"0\" id=\"Chapter_Order\" value={UpdateChapterData.Chapter_Order} onChange={(e) => addChapter(e)} placeholder=\"0 to 999\" required />\n                                                </Form.Group>\n                                            </Form.Row>\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Subject Name</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Subject_Name\" value={UpdateChapterData.Subject_Name} readOnly={true} onChange={(e) => addChapter(e)} placeholder=\"Enter Subject Name\" />\n                                                </Form.Group>\n                                                <Form.Group as={Col}>\n                                                    <Form.Label>Subject Order</Form.Label>\n                                                    <Form.Control type=\"number\" min=\"0\" readOnly={true} id=\"Subject_Order\" value={UpdateChapterData.Subject_Order} onChange={(e) => addChapter(e)} placeholder=\"0 to 999\" />\n                                                </Form.Group>\n                                            </Form.Row>\n                                            <button type=\"submit\">\n                                                Update Chapter\n                                             </button>\n                                        </Form>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(EditChapters);","import axios from 'axios';\nimport React, { Fragment, useState } from 'react';\nimport { Container, Form, Card, Col } from 'react-bootstrap';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\n\nconst EditTopics = (props) => {\n\n    // Here We Need to Three Props Object id of subject and chapter . Chapter Order\n    const { topicname, topicorder, topicdescription, subjectid, subjectname, subjectorder, chapterid, chaptername, chapterindex } = useParams();\n\n    const location = useLocation();\n    const history = useHistory();\n\n    const [UpdateTopic, SetUpdateTopic] = useState({\n        \"Topic_Name\": topicname,\n        \"Topic_Order\": topicorder,\n        \"Topic_Description\": topicdescription,\n        \"Topic_Url\": location.state.topicurl,\n        \"Topic_ImgUrl\": location.state.topicthumburl\n    });\n\n    const seturl = `https://enrollge.glitch.me/subjects/chapters/topics/${subjectid}/${chapterid}/${location.state.topicindex}`\n\n\n    const updatetopic = async (e) => {\n        e.preventDefault();\n        try {\n            const UpdateTopicData = await axios.patch(seturl, {\n                Topic_Name: UpdateTopic.Topic_Name,\n                Topic_Order: UpdateTopic.Topic_Order,\n                Topic_Description: UpdateTopic.Topic_Description,\n                Topic_Url: UpdateTopic.Topic_Url,\n                Topic_ImgUrl: UpdateTopic.Topic_ImgUrl\n            });\n            if (UpdateTopicData.data) {\n                swal(\"Updated!\", \"Topic is Successfully Updated!\", \"success\");\n            }\n        } catch (error) {\n            swal(\"Error!\", \"Topic is not Updated!\", \"error\");\n        }\n    }\n\n\n    const addTopic = async (e) => {\n        const TopicData = { ...UpdateTopic }\n        TopicData[e.target.id] = e.target.value;\n        SetUpdateTopic(TopicData);\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Topics</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"addsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push({\n                                                pathname: `/addtopic/${subjectid}/${subjectname}/${subjectorder}/${chapterid}/${chaptername}/${chapterindex}`\n                                            })\n                                        }}>\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Topic Details</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => updatetopic(e)}>\n                                            <Form.Row>\n                                                <Form.Group as={Col}>\n                                                    <Form.Label>Topic Name</Form.Label>\n                                                    <Form.Control type=\"text\" onChange={(e) => addTopic(e)} id=\"Topic_Name\" value={UpdateTopic.Topic_Name} placeholder=\"Enter Topic Name\" required />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Topic Order</Form.Label>\n                                                    <Form.Control type=\"number\" min=\"0\" onChange={(e) => addTopic(e)} id=\"Topic_Order\" value={UpdateTopic.Topic_Order} placeholder=\"0 to 999\" required />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Topic Video Url</Form.Label>\n                                                    <Form.Control type=\"text\" onChange={(e) => addTopic(e)} id=\"Topic_Url\" value={UpdateTopic.Topic_Url} placeholder=\"Enter Topic Video Url\" required />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col}>\n                                                    <Form.Label>Topic Thumbnail Url</Form.Label>\n                                                    <Form.Control type=\"text\" onChange={(e) => addTopic(e)} id=\"Topic_ImgUrl\" value={UpdateTopic.Topic_ImgUrl} placeholder=\"Enter Topic Thumbnail Url\" required />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Group >\n                                                <Form.Label>Chapter Name</Form.Label>\n                                                <Form.Control type=\"text\" readOnly={true} value={chaptername} placeholder=\"Enter Chapter Name \" />\n                                            </Form.Group>\n                                            <Form.Group >\n                                                <Form.Label>Topic Description</Form.Label>\n                                                <Form.Control as=\"textarea\" onChange={(e) => addTopic(e)} id=\"Topic_Description\" value={UpdateTopic.Topic_Description} type=\"text\" placeholder=\"Enter Topic Description\" required />\n                                            </Form.Group>\n                                            <button type=\"submit\">\n                                                Update Topic\n                                            </button>\n\n                                        </Form>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(EditTopics);","import { Fragment } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faVideo } from '@fortawesome/free-solid-svg-icons'\n\nexport const MiniCard = (props) => {\n    return (\n        <Fragment>\n            <Card style={{ backgroundColor: '#202b58', margin: '3rem', borderRadius: \"1rem\" }} className=\"mb-2\">\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <div>\n                        <FontAwesomeIcon style={{ marginLeft: '1.5rem' }} color=\"whitesmoke\" size=\"2x\" icon={faVideo} />\n                    </div>\n                    <div>\n                        <div style={{ borderLeft: \"1px solid white\", height: '5rem', marginLeft: \"2rem\" }} />\n                    </div>\n                    <div>\n                        <Card.Body style={{ color: 'whitesmoke', textAlign: 'center' }} >\n                            <Card.Title style={{ fontWeight: \"bolder\" }} >{props.Title}</Card.Title>\n                            <Card.Text style={{ fontWeight: 'bold' }}>\n                                {props.number}\n                            </Card.Text>\n                        </Card.Body>\n                    </div>\n                </div>\n            </Card>\n        </Fragment>\n    );\n}","import React, { Fragment } from 'react';\nimport { MiniCard } from './MiniCards'\nimport SideMenuBar from './SideMenuBar';\nimport Cookies from \"js-cookie\";\nimport { useHistory } from 'react-router';\n\nconst AdminDashboard = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <div className=\"admin_div\">\n                <div style={{ display: 'flex', height: '100%', width: '100%', flexWrap: 'wrap', justifyContent: \"center\", alignItems: 'center' }}>\n                    <div>\n                        <MiniCard Title=\"Total Subjects\" number=\"78\" />\n                    </div>\n                    <div>\n                        <MiniCard Title=\"Total Chapters\" number=\"78\" />\n                    </div>\n                    <div>\n                        <MiniCard Title=\"Total Courses\" number=\"78\" />\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default React.memo(AdminDashboard);","import React, { Fragment } from \"react\";\nimport { Card, Table } from 'react-bootstrap';\nimport SideMenuBar from \"./SideMenuBar\";\nimport Cookies from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Settings = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <div className=\"subjects_area\">\n                <div className=\"subjects_fdiv\">\n                    <Card className=\"subjects_fcard\">\n                        <Card.Body>\n                            <h1>System Settings</h1>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"subject_sdiv\">\n                    <Card className=\"subjects_scard\">\n                        <Card.Body>\n                            <hr />\n                            <Table striped bordered hover size=\"md\" responsive>\n                                <tbody>\n                                    <tr>\n                                        <td>1</td>\n                                    </tr>\n                                    <tr>\n                                        <td>1</td>\n                                    </tr>\n                                    <tr>\n                                        <td>1</td>\n                                    </tr>\n                                    <tr>\n                                        <td>1</td>\n                                    </tr>\n                                    <tr>\n                                        <td>1</td>\n                                    </tr>\n                                    <tr>\n                                        <td>1</td>\n                                    </tr>\n                                    <tr>\n                                        <td>1</td>\n                                    </tr>\n                                </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default React.memo(Settings);","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\nimport { Link } from 'react-router-dom';\n\n\nexport default function MenuPopupState(props) {\n    return (\n        <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n            {(popupState) => (\n                <React.Fragment>\n                    <Link className=\"link_mini\" {...bindTrigger(popupState)}>...\n                    </Link>\n                    <Menu {...bindMenu(popupState)}>\n                        <MenuItem onClick={() => {\n                            popupState.close()\n                        }}>{props.adddata}</MenuItem>\n                        <MenuItem onClick={() => {\n                            popupState.close()\n                        }}>{props.editdata}</MenuItem>\n                        <MenuItem onClick={() => {\n                            popupState.close()\n                        }}>{props.deletedata}</MenuItem>\n                    </Menu>\n                </React.Fragment>\n            )}\n        </PopupState>\n    );\n}\n","import React, { Fragment, useState } from \"react\";\nimport { Card, Table } from 'react-bootstrap'\nimport Loader from \"react-loader-spinner\";\nimport ReportMenu from './ReportMenu';\nimport SideMenuBar from \"./SideMenuBar\";\nimport Cookies from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Reports = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    const [Loading, SetLoading] = useState(true);\n    const [Report, SetReport] = useState([])\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <div className=\"subjects_area\">\n                <div className=\"subjects_fdiv\">\n                    <Card className=\"subjects_fcard\">\n                        <Card.Body>\n                            <h1>Reports Management</h1>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"subject_sdiv\">\n                    <Card className=\"subjects_scard\">\n                        <Card.Body>\n                            <hr />\n                            {/* Loader Before Api Call */}\n                            {!Loading && <div className=\"preloader\">\n                                <Loader\n                                    type=\"Hearts\"\n                                    color=\"#202b58\"\n                                    height={60}\n                                    width={60}\n                                />\n                            </div>}\n                            {/* Reports Details Table */}\n                            <Table striped bordered hover size=\"md\" responsive>\n\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>###</th>\n                                        <th>Title</th>\n                                        <th>Student Name</th>\n                                        <th>Student Email</th>\n                                        <th>Message</th>\n                                        <th>Report Date</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n\n                                    {/* // Report.map((value, index) => {\n                                        //     return (\n                                        //         <> */}\n                                    <tr>\n                                        <td >1</td>\n                                        <td><ReportMenu deletedata=\"Delete Subject\" adddata=\"Add Chapter\" editdata=\"Edit Subject\" /></td>\n                                        <td>Newton's Ring</td>\n                                        <td>Sachin Saini</td>\n                                        <td>Sachin123@gmail.com</td>\n                                        <td>Video is not running</td>\n                                        <td>4/10/2021</td>\n                                    </tr>\n                                    {/* //         </>\n                                        {/* //     );\n                                        // })\n                                    // }  */}\n                                </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        </Fragment >\n    );\n}\n\nexport default React.memo(Reports);","import React, { Fragment, useState } from \"react\";\nimport { Container, Form, Row, Card } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useHistory, Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport Cookies from \"js-cookie\";\n\nconst Login = () => {\n\n    const history = useHistory();\n    const [Admin, SetAdmin] = useState({\n        email_address: \"\",\n        password: \"\"\n    })\n\n\n    const url = \"https://enrollge.glitch.me/admin/login\"\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const CheckAdmin = await axios.post(url, {\n                email_address: Admin.email_address,\n                password: Admin.password\n            })\n            const adminExist = await CheckAdmin.data\n            if (adminExist.Login) {\n                let experiydate = new Date();\n                experiydate.setTime(experiydate.getTime() + 86400000);\n                Cookies.set(\"jwtadmin\", adminExist.Token, {\n                    path: \"/\",\n                    expires: experiydate\n                });\n                Cookies.set(\"Login\", true, {\n                    path: \"/\",\n                    expires: experiydate\n                });\n                history.push(`/admindashboard`)\n            } else {\n                swal(\"Invalid Details\", \"Please Enter the Correct Email Id And Password\", 'error');\n            }\n        } catch (error) {\n            swal(\"Error\", \"Some Error Occurred\", 'error');\n        }\n    }\n\n    const AdminExist = async (e) => {\n        const AdminData = { ...Admin }\n        AdminData[e.target.id] = e.target.value\n        await SetAdmin(AdminData);\n    }\n\n    return (\n        <Fragment>\n            <Container className=\"login_container\" fluid>\n                <Row className=\"login_area\">\n                    <Card>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <h1>Enrollge</h1>\n                            <Card.Text>Please Login To Continue</Card.Text>\n                        </Card.Body>\n                        <Form onSubmit={(e) => submit(e)} style={{ padding: \"1.6rem\" }}>\n                            <Form.Group>\n                                <Form.Label>Email address</Form.Label>\n                                <Form.Control type=\"email\" required={true} onChange={(e) => AdminExist(e)} id=\"email_address\" value={Admin.email_address} placeholder=\"Enter email\" />\n                                <Form.Text className=\"text-muted\">\n                                    We'll never share your email with anyone else.\n                             </Form.Text>\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" required={true} onChange={(e) => AdminExist(e)} id=\"password\" value={Admin.password} placeholder=\"Password\" />\n                            </Form.Group>\n                            <div className=\"mt-3\" style={{ textAlign: 'center' }}>\n                                <button type=\"submit\">\n                                    Login\n                            </button>\n                                <div className=\"mt-3\" >\n                                    <Link className=\"link-tag\" to=\"/register\">Don't have an account ?</Link>\n                                </div>\n                            </div>\n                        </Form>\n                    </Card>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\n\n\nexport default React.memo(Login);\n","import React, { Fragment, useState } from \"react\";\nimport { Container, Form, Row, Card } from \"react-bootstrap\";\nimport axios from 'axios';\nimport { Link, useHistory } from 'react-router-dom';\nimport swal from \"sweetalert\";\n\n\nconst Register = () => {\n\n    const history = useHistory();\n\n    const [RegisterAdmin, SetRegisterAdmin] = useState({\n        email_address: \"\",\n        password: \"\",\n        cpassword: \"\"\n    });\n\n    const url = \"https://enrollge.glitch.me/admin/register\"\n\n    const register = async (e) => {\n        e.preventDefault();\n        try {\n\n            const AddAdmin = await axios.post(url, {\n                email_address: RegisterAdmin.email_address,\n                password: RegisterAdmin.password,\n                cpassword: RegisterAdmin.cpassword\n            });\n\n            if (AddAdmin.data) {\n                swal(\"Success\", \"Account is Successfully Created\", \"success\")\n                history.push('/login')\n            }\n            if (AddAdmin.data === \"AdminExist\") {\n                swal(\"Oops\", \"Email Id is Already Registered\", \"error\")\n            }\n            if (!AddAdmin.data) {\n                swal(\"Oops\", \"Some Error Occured\", \"error\")\n            }\n        } catch (error) {\n            swal(\"Error\", \"Some Error Occurred\", 'error');\n        }\n    }\n\n    const addAdmin = async (e) => {\n        const AdminData = { ...RegisterAdmin }\n        AdminData[e.target.id] = e.target.value;\n        SetRegisterAdmin(AdminData);\n    }\n\n    return (\n        <Fragment>\n            <Container className=\"Register_container\" fluid>\n                <Row className=\"Register_area\">\n                    <Card>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <h1>Enrollge</h1>\n                            <Card.Text>Please Register To Continue</Card.Text>\n                        </Card.Body>\n                        <Form onSubmit={(e) => register(e)} style={{ paddingLeft: \"1.6rem\", paddingRight: \"1.6rem\", paddingBottom: \"1.6rem\", paddingTop: \"0.5rem\" }}>\n                            <Form.Group>\n                                <Form.Label>Email address</Form.Label>\n                                <Form.Control type=\"email\" required={true} onChange={(e) => addAdmin(e)} id=\"email_address\" value={RegisterAdmin.email_address} placeholder=\"Enter email\" />\n                                <Form.Text className=\"text-muted\">\n                                    We'll never share your email with anyone else.\n                             </Form.Text>\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" pattern=\"^\\S{6,}$\" required={true} onChange={(e) => addAdmin(e)} id=\"password\" value={RegisterAdmin.password} placeholder=\"Password\" />\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Label>Confirm Password</Form.Label>\n                                <Form.Control type=\"password\" pattern=\"^\\S{6,}$\" required={true} onChange={(e) => addAdmin(e)} id=\"cpassword\" value={RegisterAdmin.cpassword} placeholder=\"Confirm Password\" />\n                            </Form.Group>\n                            <div className=\"mt-3\" style={{ textAlign: 'center' }}>\n                                <button type=\"submit\">\n                                    Register\n                            </button>\n                                <div className=\"mt-3\" >\n                                    <Link className=\"link-tag\" to=\"/login\">Already have an account ?</Link>\n                                </div>\n                            </div>\n                        </Form>\n                    </Card>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(Register);","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\n\n\nexport default function MenuPopupState(props) {\n\n    const history = useHistory();\n\n    //  For Adding Courses And Topics\n    const AddTopic = () => {\n        try {\n            history.push({\n                pathname: `/addcoursetopic/${props.courseid}`\n            })\n        } catch (error) {\n            swal(\"Oops!\", \"Some Error Occur!\", \"error\");\n        }\n    }\n\n    //  For Editing Courses And Topics\n    const EditCourse = async () => {\n        try {\n            history.push({\n                pathname: `/editcourse/${props.courseid}/${props.coursename}/${props.courseorder}/${props.coursetype}/${props.coursedescription}`,\n                state: {\n                    coursethumburl: `${props.coursethumburl}`,\n                    coursetypethumburl: `${props.coursetypethumburl}`\n                }\n            })\n        } catch (error) {\n            swal(\"Oops!\", \"Some Error Occur!\", \"error\");\n        }\n    }\n    const EditTopic = () => {\n        try {\n            history.push({\n                pathname: `/editcoursetopic/${props.courseid}/${props.coursetopicid}/${props.coursetopicname}/${props.coursetopicorder}/${props.coursetopicdescription}`,\n                state: {\n                    coursetopicthumburl: `${props.coursetopicthumburl}`,\n                    coursetopicurl: `${props.coursetopicurl}`\n                }\n            })\n        } catch (error) {\n            swal(\"Oops!\", \"Some Error Occur!\", \"error\");\n        }\n    }\n\n    //  For Delete Courses And Topics\n    const DeleteCourse = async () => {\n        try {\n            const courseurl = `https://enrollge.glitch.me/courses/${props.courseid}`\n            const DeleteCourseData = await axios.delete(courseurl);\n            if (DeleteCourseData.data) {\n                swal(\"Deleted!\", \"Subject is Successfully Deleted!\", \"success\");\n            }\n            setTimeout(() => {\n                window.location.reload();\n            }, 1000)\n\n        } catch (e) {\n            swal(\"Error!\", \"Subject is not Deleted!\", \"error\");\n        }\n    }\n    const DeleteTopic = async () => {\n        try {\n            const coursetopicurl = `https://enrollge.glitch.me/courses/topics/${props.courseid}/${props.coursetopicid}`\n            const DeleteCourseTopicData = await axios.delete(coursetopicurl);\n            if (DeleteCourseTopicData.data) {\n                swal(\"Deleted!\", \"Topic is Successfully Deleted!\", \"success\");\n            }\n            setTimeout(() => {\n                window.location.reload();\n            }, 1000)\n\n        } catch (e) {\n            swal(\"Error!\", \"Topic is not Deleted!\", \"error\");\n        }\n    }\n\n    return (\n        <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n            {(popupState) => (\n                <React.Fragment>\n                    <Link className=\"link_mini\" {...bindTrigger(popupState)}>...\n                    </Link>\n                    <Menu {...bindMenu(popupState)}>\n                        <MenuItem onClick={() => {\n                            popupState.close()\n                            if (props.adddata === \"Add Topic\") {\n                                AddTopic();\n                            }\n\n                        }}>{props.adddata}</MenuItem>\n                        <MenuItem onClick={() => {\n                            popupState.close()\n                            if (props.editdata === \"Edit Course\") {\n                                EditCourse();\n                            }\n                            if (props.editdata === \"Edit Topic\") {\n                                EditTopic();\n                            }\n                        }}>{props.editdata}</MenuItem>\n                        <MenuItem onClick={() => {\n                            popupState.close()\n                            if (props.deletedata === \"Delete Course\") {\n                                DeleteCourse();\n                            }\n\n                            if (props.deletedata === \"Delete Topic\") {\n                                DeleteTopic();\n                            }\n                        }}>{props.deletedata}</MenuItem>\n                    </Menu>\n                </React.Fragment>\n            )}\n        </PopupState>\n    );\n}\n","import axios from 'axios';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Card, Image, Table, InputGroup, FormControl } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport CoursesLongMenu from './CoursesLongMenu';\nimport Loader from \"react-loader-spinner\";\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\nimport Cookies from \"js-cookie\";\n\nconst CoursesManagement = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    const [Loading, SetLoading] = useState(false);\n    const [Courses, SetCourses] = useState([])\n    const [Search, SetSearch] = useState()\n    const [SearchData, SetSearchData] = useState([]) // This Data is Used For Map Function And Showing Purpose\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                SetLoading(false);\n                const url = \"https://enrollge.glitch.me/courses\"\n                const CoursesInfo = await axios.get(url);\n                SetCourses(CoursesInfo.data);\n                SetSearchData(CoursesInfo.data, SetLoading(true))\n            }\n            catch (error) {\n                swal(\"Error\", \"Some Error Occurred\", 'error');\n            }\n        }\n        fetchData();\n    }, []);\n\n    const handleChange = (value) => {\n        SetSearch(value);\n        filterData(value);\n    }\n\n    const filterData = (value) => {\n        const lowerCasedValue = value.toLowerCase().trim();\n        if (lowerCasedValue === \"\") {\n            SetSearchData(Courses)\n        } else {\n            const filteredData = SearchData.filter((item) => {\n                return Object.keys(item).some(key =>\n                    item[key].toString().toLowerCase().includes(lowerCasedValue)\n                );\n            });\n            SetSearchData(filteredData);\n        }\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <div className=\"subjects_area\">\n                <div className=\"subjects_fdiv\">\n                    <Card className=\"subjects_fcard\">\n                        <Card.Body>\n                            <h1>Courses Management</h1>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"subject_sdiv\">\n                    <Card className=\"subjects_scard\">\n                        <Card.Body>\n                            {/* Search Area Tab */}\n                            <div className=\"subjects_search\">\n                                <div>\n                                    <button className=\"main_btn\" onClick={() => {\n                                        history.push('/addcourse')\n                                    }}>Add Course</button>\n                                </div>\n                                <div>\n                                    <InputGroup className=\"mb-2 input-area\">\n                                        <FormControl\n                                            className=\"mr-5\"\n                                            placeholder=\"Search Course\"\n                                            value={Search}\n                                            onChange={(e) => handleChange(e.target.value)}\n                                        />\n                                    </InputGroup>\n\n                                </div>\n                            </div>\n                            <hr />\n                            {/* Loader Before Api Call */}\n                            {!Loading && <div className=\"preloader\">\n                                <Loader\n                                    type=\"Hearts\"\n                                    color=\"#202b58\"\n                                    height={60}\n                                    width={60}\n                                />\n                            </div>}\n                            {/* Courses Details Table */}\n                            <Table striped bordered hover size=\"md\" responsive>\n\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>###</th>\n                                        <th>Thumbnail</th>\n                                        <th>Type Of Course </th>\n                                        <th>Course Name</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        SearchData.map((value, index) => {\n                                            return (\n                                                <>\n                                                    <tr>\n                                                        <td key={index} >{index + 1}</td>\n                                                        <td><CoursesLongMenu courseid={value._id} coursename={value.Courses_Name} coursethumburl={value.Courses_ImgUrl} coursetype={value.Courses_Type} coursedescription={value.Courses_Description} coursetypethumburl={value.Courses_TypeImgUrl} courseorder={value.Courses_Order} deletedata=\"Delete Course\" adddata=\"Add Topic\" editdata=\"Edit Course\" /></td>\n                                                        <td><Image style={{ height: '5rem', width: '5rem' }} src={value.Courses_ImgUrl} thumbnail /></td>\n                                                        <td>{value.Courses_Type}</td>\n                                                        <td>{value.Courses_Name}</td>\n                                                    </tr>\n                                                </>\n                                            );\n                                        })\n                                    }\n                                </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default React.memo(CoursesManagement);","import axios from 'axios';\nimport React, { Fragment, useState } from 'react';\nimport { Card, Container, Form, Col } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\nimport Cookies from \"js-cookie\";\n\n\nconst AddCourses = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    const [Course, SetCourse] = useState({\n        Course_Name: \"\",\n        Course_Order: \"\",\n        Course_Type: \"\",\n        Course_ImgUrl: \"\",\n        Course_TypeImgUrl: \"\",\n        Course_Description: \"\"\n    })\n\n    const url = \"https://enrollge.glitch.me/Courses\"\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const AddCourseData = await axios.post(url, {\n                Courses_Name: Course.Course_Name,\n                Courses_Order: Course.Course_Order,\n                Courses_Type: Course.Course_Type,\n                Courses_TypeImgUrl: Course.Course_TypeImgUrl,\n                Courses_ImgUrl: Course.Course_ImgUrl,\n                Courses_Description: Course.Course_Description\n            })\n            if (AddCourseData.data) {\n                swal(\"Addded!\", \"Course is Successfully Added!\", \"success\");\n            }\n        } catch (error) {\n            swal(\"Not Added!\", \"Course is Not Added!\", \"error\");\n        }\n    }\n\n    const addCourse = async (e) => {\n        // Here First Create an Object of CourseData and attach with Course State and Then fill values with Object Data with Target Values and then Set it On State.\n        const Coursedata = { ...Course }\n        Coursedata[e.target.id] = await e.target.value\n        await SetCourse(Coursedata);\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Course</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"aaddsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push('/managecourses')\n                                        }} >\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Course Details</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => submit(e)} >\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Course Name</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Course_Name\" required={true} onChange={(e) => addCourse(e)} value={Course.Course_Name} placeholder=\"Enter Course Name\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Course Order</Form.Label>\n                                                    <Form.Control type=\"number\" min=\"0\" id=\"Course_Order\" required={true} onChange={(e) => addCourse(e)} value={Course.Course_Order} placeholder=\"Enter Course Order\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Course Type</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Course_Type\" required={true} onChange={(e) => addCourse(e)} value={Course.Course_Type} placeholder=\"Enter Course Type\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Course Thumbnail Url</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Course_ImgUrl\" required={true} onChange={(e) => addCourse(e)} value={Course.Course_ImgUrl} placeholder=\"Enter Course Thumbnail Url\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n\n                                            <Form>\n                                                <Form.Group>\n                                                    <Form.Label>Course Type Thumbnail Url</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Course_TypeImgUrl\" required={true} onChange={(e) => addCourse(e)} value={Course.Course_TypeImgUrl} placeholder=\"Enter Course Type Thumbnail Url\" />\n                                                </Form.Group>\n\n                                                <Form.Group>\n                                                    <Form.Label>Course Description</Form.Label>\n                                                    <Form.Control type=\"text\" as=\"textarea\" id=\"Course_Description\" required={true} onChange={(e) => addCourse(e)} value={Course.Course_Description} placeholder=\"Enter Course Description\" />\n                                                </Form.Group>\n                                            </Form>\n                                            <button type=\"submit\">\n                                                Add Course\n                                            </button>\n\n                                        </Form>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(AddCourses);","import axios from 'axios';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Container, Form, Card, Col, Table, Image } from 'react-bootstrap';\nimport { useParams, useHistory } from 'react-router-dom';\nimport CoursesLongMenu from \"./CoursesLongMenu\";\nimport swal from 'sweetalert';\nimport Loader from 'react-loader-spinner';\nimport SideMenuBar from '../SideMenuBar';\n\nconst AddCourseTopics = (props) => {\n\n    // Here We Need to Three Props Object id of subject and chapter . Chapter Order\n\n    const { courseid } = useParams();\n\n    const history = useHistory();\n\n    const [Loading, SetLoading] = useState(false);\n\n    const [CourseTopics, SetCourseTopics] = useState({\n        Course_TopicName: \"\",\n        Course_TopicOrder: \"\",\n        Course_TopicDescription: \"\",\n        Course_TopicUrl: \"\",\n        Course_TopicImgUrl: \"\"\n    });\n\n    const [CourseTopicsData, SetCourseTopicsData] = useState([]);\n\n    const seturl = `https://enrollge.glitch.me/courses/topics/${courseid}`\n\n    const showurl = `https://enrollge.glitch.me/courses/${courseid}`\n\n    useEffect(() => {\n        try {\n            SetLoading(false);\n            const fetchData = async () => {\n                const GetCourseTopics = await axios.get(showurl)\n                const CourseTopicData = await GetCourseTopics.data.Courses_Topics\n                SetCourseTopicsData(CourseTopicData, SetLoading(true));\n            }\n            fetchData();\n        } catch (error) {\n            swal(\"Error\", \"Some Error Occurred\", 'error');\n        }\n    }, [])\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const AddCourseTopic = await axios.put(seturl, {\n                Courses_TopicName: CourseTopics.Course_TopicName,\n                Courses_TopicOrder: CourseTopics.Course_TopicOrder,\n                Courses_TopicDescription: CourseTopics.Course_TopicDescription,\n                Courses_TopicUrl: CourseTopics.Course_TopicUrl,\n                Courses_TopicImgUrl: CourseTopics.Course_TopicImgUrl\n            });\n            if (AddCourseTopic.data) {\n                swal(\"Added!\", \"Topic of Course is Successfully Added!\", \"success\");\n            }\n            setTimeout(() => {\n                window.location.reload();\n            }, 1000)\n        } catch (error) {\n            swal(\"Error!\", \"Topic of Course is not Added!\", \"error\");\n        }\n    }\n\n\n    const addCourseTopic = async (e) => {\n        const CourseTopicData = { ...CourseTopics }\n        CourseTopicData[e.target.id] = e.target.value;\n        SetCourseTopics(CourseTopicData);\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Topics of Course</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"addsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push(`/managecourses`)\n                                        }}>\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Topic Details of Course</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => submit(e)}>\n                                            <Form.Row>\n                                                <Form.Group as={Col}>\n                                                    <Form.Label>Topic Name of Course</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} onChange={(e) => addCourseTopic(e)} id=\"Course_TopicName\" value={CourseTopics.Course_TopicName} placeholder=\"Enter Topic Name of Course\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Topic Order of Course</Form.Label>\n                                                    <Form.Control type=\"number\" required={true} min=\"0\" onChange={(e) => addCourseTopic(e)} id=\"Course_TopicOrder\" value={CourseTopics.Course_TopicOrder} placeholder=\"0 to 999\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Topic Video Url of Course</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} onChange={(e) => addCourseTopic(e)} id=\"Course_TopicUrl\" value={CourseTopics.Course_TopicUrl} placeholder=\"Enter Topic Video Url of Course\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col}>\n                                                    <Form.Label>Topic Thumbnail Url of Course</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} onChange={(e) => addCourseTopic(e)} id=\"Course_TopicImgUrl\" value={CourseTopics.Course_TopicImgUrl} placeholder=\"Enter Topic Thumbnail Url of Course\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n\n                                            <Form.Group >\n                                                <Form.Label>Topic Desciption of Course</Form.Label>\n                                                <Form.Control as=\"textarea\" onChange={(e) => addCourseTopic(e)} id=\"Course_TopicDescription\" value={CourseTopics.Course_TopicDescription} type=\"text\" placeholder=\"Enter Topic Description of Course\" />\n                                            </Form.Group>\n\n\n                                            <button type=\"submit\">\n                                                Add Topic of Course\n                                            </button>\n\n                                        </Form>\n                                    </div>\n                                    <br />\n                                    <hr />\n                                    <br />\n\n                                    {/* Topics Details of Course */}\n\n                                    <div>\n                                        <div>\n                                            <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                                <text style={{ color: 'white' }}>All Topics of Course</text>\n                                            </Card>\n                                        </div>\n                                        <hr />\n                                        {/* Loader Before Api Call */}\n                                        {!Loading && <div className=\"preloader\">\n                                            <Loader\n                                                type=\"Hearts\"\n                                                color=\"#202b58\"\n                                                height={60}\n                                                width={60}\n                                            />\n                                        </div>}\n                                        <Table striped bordered hover size=\"md\" responsive>\n                                            <thead>\n                                                <tr>\n                                                    <th>S.No</th>\n                                                    <th>###</th>\n                                                    <th>Thumbnail</th>\n                                                    <th>Name</th>\n                                                    <th>\n                                                        Video Url\n                                                    </th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    CourseTopicsData.map((value, i) => {\n                                                        return (\n                                                            <tr>\n                                                                <td key={i}>{i + 1}</td>\n                                                                <td>\n                                                                    <CoursesLongMenu coursetopicindex={i} coursetopicname={value.Courses_TopicName} courseid={courseid} coursetopicorder={value.Courses_TopicOrder} coursetopicdescription={value.Courses_TopicDescription} coursetopicurl={value.Courses_TopicUrl} coursetopicthumburl={value.Courses_TopicImgUrl} coursetopicid={value._id} deletedata=\"Delete Topic\" editdata=\"Edit Topic\" />\n                                                                </td>\n                                                                <td><Image style={{ height: '5rem', width: '5rem' }} src={value.Courses_TopicImgUrl} thumbnail /></td>\n                                                                <td>{value.Courses_TopicName}</td>\n                                                                <td>{value.Courses_TopicUrl}</td>\n                                                            </tr>\n                                                        );\n                                                    })\n                                                }\n                                            </tbody>\n                                        </Table>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(AddCourseTopics);","import axios from 'axios';\nimport React, { Fragment, useState } from 'react';\nimport { Card, Container, Form, Col } from 'react-bootstrap';\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\n\n\nconst EditCourses = () => {\n\n    const { courseid, coursename, courseorder, coursetype, coursedescription } = useParams();\n\n    const history = useHistory();\n\n    const location = useLocation();\n\n    const [Course, SetCourse] = useState({\n        Course_Name: coursename,\n        Course_Order: courseorder,\n        Course_Type: coursetype,\n        Course_ImgUrl: location.state.coursethumburl,\n        Course_TypeImgUrl: location.state.coursetypethumburl,\n        Course_Description: coursedescription\n    })\n\n\n    const seturl = `https://enrollge.glitch.me/courses/${courseid}`\n\n    const updateCourse = async (e) => {\n        e.preventDefault();\n        try {\n            const UpdateCourseData = await axios.patch(seturl, {\n                Courses_Name: Course.Course_Name,\n                Courses_Order: Course.Course_Order,\n                Courses_Type: Course.Course_Type,\n                Courses_TypeImgUrl: Course.Course_TypeImgUrl,\n                Courses_ImgUrl: Course.Course_ImgUrl,\n                Courses_Description: Course.Course_Description\n            })\n            if (UpdateCourseData.data) {\n                swal(\"Updated!\", \"Course is Successfully Updated!\", \"success\");\n            }\n        } catch (error) {\n            swal(\"Not Updated!\", \"Course is Not Updated!\", \"error\");\n        }\n    }\n\n    const updateCourseData = async (e) => {\n        // Here First Create an Object of CourseData and attach with Course State and Then fill values with Object Data with Target Values and then Set it On State.\n        const Coursedata = { ...Course }\n        Coursedata[e.target.id] = await e.target.value\n        await SetCourse(Coursedata);\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Course</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"aaddsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push('/managecourses')\n                                        }} >\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Course Details</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => updateCourse(e)} >\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Course Name</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} id=\"Course_Name\" onChange={(e) => updateCourseData(e)} value={Course.Course_Name} placeholder=\"Enter Course Name\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Course Order</Form.Label>\n                                                    <Form.Control type=\"number\" required={true} min=\"0\" id=\"Course_Order\" onChange={(e) => updateCourseData(e)} value={Course.Course_Order} placeholder=\"Enter Course Order\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Course Type</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} id=\"Course_Type\" onChange={(e) => updateCourseData(e)} value={Course.Course_Type} placeholder=\"Enter Course Type\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Course Thumbnail Url</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} id=\"Course_ImgUrl\" onChange={(e) => updateCourseData(e)} value={Course.Course_ImgUrl} placeholder=\"Enter Course Thumbnail Url\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n\n                                            <Form>\n                                                <Form.Group>\n                                                    <Form.Label>Course Type Thumbnail Url</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Course_TypeImgUrl\" onChange={(e) => updateCourseData(e)} value={Course.Course_TypeImgUrl} placeholder=\"Enter Course Type Thumbnail Url\" required />\n                                                </Form.Group>\n\n                                                <Form.Group>\n                                                    <Form.Label>Course Description</Form.Label>\n                                                    <Form.Control type=\"text\" as=\"textarea\" id=\"Course_Description\" onChange={(e) => updateCourseData(e)} value={Course.Course_Description} placeholder=\"Enter Course Description\" required />\n                                                </Form.Group>\n                                            </Form>\n                                            <button type=\"submit\">\n                                                Update Course\n                                            </button>\n\n                                        </Form>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(EditCourses);","import axios from 'axios';\nimport React, { Fragment, useState } from 'react';\nimport { Container, Form, Card, Col } from 'react-bootstrap';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\n\nconst EditCourseTopic = (props) => {\n\n    // Here We Need to Three Props Object id of subject and chapter . Chapter Order\n\n    const { courseid, coursetopicid, coursetopicname, coursetopicorder, coursetopicdescription } = useParams();\n\n    const location = useLocation();\n\n    const history = useHistory();\n\n    const [CourseTopics, SetCourseTopics] = useState({\n        Course_TopicName: coursetopicname,\n        Course_TopicOrder: coursetopicorder,\n        Course_TopicDescription: coursetopicdescription,\n        Course_TopicUrl: location.state.coursetopicurl,\n        Course_TopicImgUrl: location.state.coursetopicthumburl\n    });\n\n    const seturl = `https://enrollge.glitch.me/courses/topics/${courseid}/${coursetopicid}`\n\n    const updateCourseTopic = async (e) => {\n        e.preventDefault();\n        try {\n            const updateCourseTopicData = await axios.patch(seturl, {\n                Courses_TopicName: CourseTopics.Course_TopicName,\n                Courses_TopicOrder: CourseTopics.Course_TopicOrder,\n                Courses_TopicDescription: CourseTopics.Course_TopicDescription,\n                Courses_TopicUrl: CourseTopics.Course_TopicUrl,\n                Courses_TopicImgUrl: CourseTopics.Course_TopicImgUrl\n            });\n            if (updateCourseTopicData.data) {\n                swal(\"Updated!\", \"Topic of Course is Successfully Updated!\", \"success\");\n            }\n        } catch (error) {\n            swal(\"Error!\", \"Topic of Course is not Updated!\", \"error\");\n        }\n    }\n\n\n    const updateCourseTopics = async (e) => {\n        const CourseTopicData = { ...CourseTopics }\n        CourseTopicData[e.target.id] = e.target.value;\n        SetCourseTopics(CourseTopicData);\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Topics of Course</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"addsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push(`/addcoursetopic/${courseid}`)\n                                        }}>\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Topic Details of Course</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => updateCourseTopic(e)}>\n                                            <Form.Row>\n                                                <Form.Group as={Col}>\n                                                    <Form.Label>Topic Name of Course</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} onChange={(e) => updateCourseTopics(e)} id=\"Course_TopicName\" value={CourseTopics.Course_TopicName} placeholder=\"Enter Topic Name of Course\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Topic Order of Course</Form.Label>\n                                                    <Form.Control type=\"number\" required={true} min=\"0\" onChange={(e) => updateCourseTopics(e)} id=\"Course_TopicOrder\" value={CourseTopics.Course_TopicOrder} placeholder=\"0 to 999\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} >\n                                                    <Form.Label>Topic Video Url of Course</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} onChange={(e) => updateCourseTopics(e)} id=\"Course_TopicUrl\" value={CourseTopics.Course_TopicUrl} placeholder=\"Enter Topic Video Url of Course\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col}>\n                                                    <Form.Label>Topic Thumbnail Url of Course</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} onChange={(e) => updateCourseTopics(e)} id=\"Course_TopicImgUrl\" value={CourseTopics.Course_TopicImgUrl} placeholder=\"Enter Topic Thumbnail Url of Course\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n\n                                            <Form.Group >\n                                                <Form.Label>Topic Desciption of Course</Form.Label>\n                                                <Form.Control as=\"textarea\" onChange={(e) => updateCourseTopics(e)} id=\"Course_TopicDescription\" value={CourseTopics.Course_TopicDescription} type=\"text\" placeholder=\"Enter Topic Description of Course\" />\n                                            </Form.Group>\n\n\n                                            <button type=\"submit\">\n                                                Update Topic of Course\n                                            </button>\n\n                                        </Form>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(EditCourseTopic);","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\nimport AddTopics from './Components/Subjects Managements/AddTopics';\nimport AddChapters from './Components/Subjects Managements/AddChapters';\nimport AddSubjects from './Components/Subjects Managements/AddSubjects';\nimport SubjectsManagement from \"./Components/Subjects Managements/SubjectsManagement\";\nimport EditSubject from './Components/Subjects Managements/EditSubject';\nimport EditChapter from './Components/Subjects Managements/EditChapter';\nimport EditTopic from './Components/Subjects Managements/EditTopic';\nimport AdminDashboard from './Components/AdminDashboard';\nimport Settings from './Components/Settings';\nimport Reports from './Components/Reports';\nimport Login from './Components/Login';\nimport Register from './Components/Register';\nimport CoursesManagement from './Components/Courses Managements/CoursesManagement';\nimport AddCourses from './Components/Courses Managements/AddCourses';\nimport AddCourseTopics from './Components/Courses Managements/AddCourseTopics';\nimport EditCourse from './Components/Courses Managements/EditCourse';\nimport EditCourseTopic from './Components/Courses Managements/EditCourseTopic';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Cookies from \"js-cookie\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" render={() => (\n        Cookies.get(\"Login\") ? (\n          <Redirect to=\"/admindashboard\" />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      )} />\n      <Route path=\"/admindashboard\" component={AdminDashboard} />\n\n      {/*  Routes For Subjects Management */}\n      <Route path=\"/managesubjects\" component={SubjectsManagement} />\n      <Route path=\"/addsubject\" component={AddSubjects} />\n      <Route path=\"/addchapter/:subjectname/:subjectorder/:subjectid\" component={AddChapters} />\n      <Route path=\"/addtopic/:subjectid/:subjectname/:subjectorder/:chapterid/:chaptername/:chapterindex\" component={AddTopics} />\n      <Route path=\"/editsubject/:subjectid/:subjectname/:subjectorder/:subjectsem/:subjectcourse/:subjectbranch\" component={EditSubject} />\n      <Route path=\"/editchapter/:subjectid/:chapterid/:chaptername/:chapterorder/:subjectname/:subjectorder\" component={EditChapter} />\n      <Route path=\"/edittopic/:topicname/:topicorder/:topicdescription/:chaptername/:subjectid/:subjectname/:subjectorder/:chapterid/:chapterindex\" component={EditTopic} />\n\n      {/*  Routes For Courses Management */}\n      <Route path=\"/managecourses\" component={CoursesManagement} />\n      <Route path=\"/addcourse\" component={AddCourses} />\n      <Route path=\"/addcoursetopic/:courseid\" component={AddCourseTopics} />\n      <Route path=\"/editcourse/:courseid/:coursename/:courseorder/:coursetype/:coursedescription\" component={EditCourse} />\n      <Route path=\"/editcoursetopic/:courseid/:coursetopicid/:coursetopicname/:coursetopicorder/:coursetopicdescription\" component={EditCourseTopic} />\n\n      {/* Routes For Extra Function */}\n      <Route path=\"/settings\" component={Settings} />\n      <Route path=\"/reports\" component={Reports} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}