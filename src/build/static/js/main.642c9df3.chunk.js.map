{"version":3,"sources":["Components/Subjects Managements/LongMenu.js","Components/SideMenuBar.js","Components/Subjects Managements/AddTopics.js","Components/Subjects Managements/AddChapters.js","Components/Subjects Managements/AddSubjects.js","Components/Subjects Managements/SubjectsManagement.js","Components/Subjects Managements/EditSubject.js","Components/Subjects Managements/EditChapter.js","Components/Subjects Managements/EditTopic.js","Components/MiniCards.js","Components/AdminDashboard.js","Components/TermsAndConditions.js","Components/Settings.js","Components/MiniMenu.js","Components/Reports.js","Components/Login.js","Components/Courses Managements/CoursesLongMenu.js","Components/Courses Managements/CoursesManagement.js","Components/Courses Managements/AddCourses.js","Components/Courses Managements/AddCourseTopics.js","Components/Courses Managements/EditCourse.js","Components/Courses Managements/EditCourseTopic.js","Components/Feedback.js","Components/Subjects Managements/AddCoursesCategories.js","Components/Courses Managements/AddCoursesTypes.js","Components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["REACT_APP_API_URL","process","MenuPopupState","props","history","useHistory","AddChapter","a","push","pathname","subjectname","subjectorder","subjectid","error","swal","AddTopic","chapterid","chaptername","chapterindex","DeleteSubject","subjecturl","axios","delete","data","setTimeout","go","DeleteChapter","chapterurl","DeleteTopic","topicurl","topicid","EditSubject","subjectsem","subjectcourse","subjectbranch","EditChapter","chapterorder","variant","popupId","popupState","Fragment","className","bindTrigger","Menu","bindMenu","MenuItem","onClick","close","adddata","editdata","topicname","topicorder","topicdescription","state","topicthumburl","topicindex","topicsource","EditTopic","deletedata","SideMenuBar","location","useLocation","React","useState","admindashboard","Setadmindashboard","managesubjects","Setmanagesubjects","managecourses","Setmanagecourses","reports","Setreports","feedback","Setfeedback","settings","Setsettings","addcoursescategories","Setaddcoursescategories","addcoursestypes","Setaddcoursestypes","onSelect","selected","to","Toggle","Nav","active","e","f","style","paddingTop","eventKey","fontSize","icon","faHome","faBookOpen","faPlusSquare","faBookReader","faPlusCircle","faFlag","faCommentAlt","faCog","memo","AddTopics","useParams","Loading","SetLoading","Topic_Name","Topic_Order","Topic_Description","Topic_Url","Topic_Source","Topic_ImgUrl","Topics","SetTopics","TopicsData","SetTopicsData","seturl","showurl","useEffect","get","GetTopics","Chapters","TopicData","fetchData","submit","preventDefault","console","log","put","addTopic","target","id","value","Container","fluid","Card","Body","backgroundColor","paddingBottom","paddingLeft","color","Form","onSubmit","Row","Group","as","Col","xs","sm","md","lg","Label","Control","type","onChange","placeholder","required","min","readOnly","height","width","Table","striped","bordered","hover","size","responsive","map","i","_id","Image","src","thumbnail","AddChapters","Chapter_Name","Chapter_Order","Subject_Name","Subject_Order","Chapter","SetChapter","ChapterData","SetChapterData","GetChapters","ChaptersData","addChapter","Chapterdata","AddSubjects","Cookies","SubjectName","SetSubjectName","SubjectOrder","SetSubjectOrder","SubjectCourse","SetSubjectCourse","SubjectBranch","SetSubjectBranch","SubjectSemester","SetSubjectSemester","Categories","SetCategories","Branches","SetBranches","Semesters","SetSemesters","url","catergoriesurl","CategoriesData","post","Subject_Course","Subject_Branch","Subject_Semester","index","Course_Type","indexOf","Course_Branch","Course_Semester","SubjectsManagement","Subjects","SetSubjects","Search","SetSearch","SearchData","SetSearchData","SubjectsInfo","filterData","lowercasedValue","toLowerCase","trim","filteredData","filter","item","Object","keys","some","key","toString","includes","InputGroup","FormControl","subjectthumburl","Subject_imgurl","Update_SubjectName","SetUpdate_SubjectName","Update_SubjectOrder","SetUpdate_SubjectOrder","Update_SubjectSemester","SetUpdate_SubjectSemester","Update_SubjectCourse","SetUpdate_SubjectCourse","Update_SubjectBranch","SetUpdate_SubjectBranch","update","patch","EditChapters","UpdateChapterData","SetUpdateChapterData","UpdateChapter","EditTopics","UpdateTopic","SetUpdateTopic","updatetopic","MiniCard","margin","borderRadius","display","justifyContent","alignItems","marginLeft","faVideo","borderLeft","textAlign","Title","fontWeight","Text","number","AdminDashboard","Courses","SetCourses","TotalChapters","SetTotalChapters","isLoading","SetisLoading","courseurl","CoursesInfo","sum","length","parseInt","JSON","stringify","flexWrap","EditButton","onMouseDown","evt","document","execCommand","cmd","arg","name","TermsAndConditions","handleChange","setState","html","sanitizeConf","allowedTags","allowedAttributes","sanitize","sanitizeHtml","toggleEditable","editable","toggleView","HtmlView","ChangeTermsAndConditions","termsandconditionsid","UpdateTermsAndConditions","render","tagName","disabled","onBlur","marginTop","then","catch","Component","Settings","ShowReportModel","SetShowReportModel","ShowFeedbackModel","SetShowFeedbackModel","ShowCourseCategoryModel","SetShowCourseCategoryModel","ShowCourseTypeModel","SetShowCourseTypeModel","coursename","UpdateCourseName","SetUpdateCourseName","coursebranches","UpdateCourseBranches","SetUpdateCourseBranches","coursesemesters","UpdateCourseSemesters","SetUpdateCourseSemesters","coursetype","UpdateCourseTypeName","SetUpdateCourseTypeName","coursetypedescription","UpdateCourseTypeDescription","SetUpdateCourseTypeDescription","coursetypeimgurl","UpdateCourseTypeImgUrl","SetUpdateCourseTypeImgUrl","DeleteFeedback","feedbackid","DeleteFeedbackData","DeleteReport","reportid","DeleteReportData","DeleteCourseCategory","coursecategoryid","DeleteCourseCategoryData","DeleteCourseType","coursetypesid","DeleteCourseTypeData","SendFeedbackNotification","SendReportNotification","UpdateCourseCategory","UpdateCourseCategoryData","UpdateCourseType","Course_TypeDescription","Course_TypeImgUrl","UpdateCourseTypeData","edit","Modal","show","onHide","Header","Footer","borderColor","onItemAdded","allItems","onItemDeleted","pop","values","Reports","Report","SetReport","ReportsData","Report_Title","Report_StudentName","Report_StudentEmail","Report_Message","Report_Status","Report_Date","Login","email_address","password","Admin","SetAdmin","CheckAdmin","adminExist","experiydate","Date","setTime","getTime","set","Token","path","expires","AdminExist","AdminData","padding","EditCourse","courseid","courseorder","coursedescription","coursethumburl","coursetypethumburl","DeleteCourse","coursetopicurl","coursetopicid","coursetopicname","coursetopicorder","coursetopicdescription","coursetopicthumburl","coursetopicsource","CoursesManagement","lowerCasedValue","Courses_Name","Courses_ImgUrl","Courses_Type","Courses_Description","Courses_Order","AddCourses","Course_Name","Course_Order","Course_ImgUrl","Course_Description","Course","SetCourse","CourseTypes","SetCourseTypes","GetCourseTypes","CourseTypesData","AddCourseData","addCourse","Coursedata","AddCourseTopics","Course_TopicName","Course_TopicOrder","Course_TopicDescription","Course_TopicUrl","Course_TopicSource","Course_TopicImgUrl","CourseTopics","SetCourseTopics","CourseTopicsData","SetCourseTopicsData","GetCourseTopics","Courses_Topics","CourseTopicData","Courses_TopicName","Courses_TopicOrder","Courses_TopicDescription","Courses_TopicUrl","Courses_TopicSource","Courses_TopicImgUrl","addCourseTopic","coursetopicindex","EditCourses","updateCourse","Courses_TypeImgUrl","updateCourseData","EditCourseTopic","updateCourseTopic","updateCourseTopics","Feedback","Feedbacks","SetFeedbacks","FeedbacksData","Feedback_StudentName","Feedback_StudentEmail","Feedback_Message","Feedback_Date","AddCoursesCategories","CoursesCategories","SetCoursesCategories","ShowModal","setShowModal","CourseName","SetCourseName","AddingCourseCategory","AddCategory","AddCoursesTypes","CoursesTypes","SetCoursesTypes","CourseTypeName","SetCourseTypeName","CourseTypeDescription","SetCourseTypeDescription","CourseTypeImgUrl","SetCourseTypeImgUrl","CoursesTypesData","AddingCoursesTypes","AddCourseType","NotFound","App","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.642c9df3.chunk.js","sourcesContent":["import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\n\nconst { REACT_APP_API_URL } = process.env;\n\nexport default function MenuPopupState(props) {\n\n    const history = useHistory();\n\n    // For Adding All Chapters And Topics\n\n    const AddChapter = async () => {\n        try {\n            history.push({\n                pathname: `/addchapter/${props.subjectname}/${props.subjectorder}/${props.subjectid}`\n            })\n        } catch (error) {\n            swal(\"Oops!\", \"Some Error Occur!\", \"error\");\n        }\n    }\n\n    const AddTopic = async () => {\n        try {\n            history.push({\n                pathname: `/addtopic/${props.subjectid}/${props.subjectname}/${props.subjectorder}/${props.chapterid}/${props.chaptername}/${props.chapterindex}`\n            })\n        } catch (error) {\n            swal(\"Oops!\", \"Some Error Occur!\", \"error\");\n        }\n    }\n\n\n    //  For Deleting Subject, Chapters And Topics\n\n    const DeleteSubject = async () => {\n        try {\n            const subjecturl = `${REACT_APP_API_URL}/subject/${props.subjectid}`\n            const DeleteSubjectData = await axios.delete(subjecturl);\n            if (DeleteSubjectData.data) {\n                swal(\"Deleted!\", \"Subject is Successfully Deleted!\", \"success\");\n            }\n            setTimeout(() => {\n                history.go(0)\n            }, 2000)\n\n        } catch (e) {\n            swal(\"Error!\", \"Subject is not Deleted!\", \"error\");\n        }\n    }\n    const DeleteChapter = async () => {\n        try {\n            const chapterurl = `${REACT_APP_API_URL}/subjects/chapters/${props.subjectid}/${props.chapterid}`\n            const DeleteChapterData = await axios.delete(chapterurl);\n            if (DeleteChapterData.data) {\n                swal(\"Deleted!\", \"Chapter is Successfully Deleted!\", \"success\");\n            }\n            setTimeout(() => {\n                history.go(0)\n            }, 2000)\n\n        } catch (e) {\n            swal(\"Error!\", \"Chapter is not Deleted!\", \"error\");\n        }\n    }\n    const DeleteTopic = async () => {\n        try {\n            const topicurl = `${REACT_APP_API_URL}/subjects/chapters/topics/${props.subjectid}/${props.chapterid}/${props.topicid}`\n            const DeleteTopicData = await axios.delete(topicurl);\n            if (DeleteTopicData.data) {\n                swal(\"Deleted!\", \"Topic is Successfully Deleted!\", \"success\");\n            }\n            setTimeout(() => {\n                history.go(0)\n            }, 2000)\n\n        } catch (e) {\n            swal(\"Error!\", \"Topic is not Deleted!\", \"error\");\n        }\n    }\n\n\n    // For Editing All Subject, Chapters And Topics\n    const EditSubject = async () => {\n        try {\n            history.push({\n                pathname: `/editsubject/${props.subjectid}/${props.subjectname}/${props.subjectorder}/${props.subjectsem}/${props.subjectcourse}/${props.subjectbranch}`\n            })\n        } catch (error) {\n            swal(\"Oops!\", \"Some Error Occur!\", \"error\");\n        }\n    }\n\n    const EditChapter = async () => {\n        try {\n            history.push(`/editchapter/${props.subjectid}/${props.chapterid}/${props.chaptername}/${props.chapterorder}/${props.subjectname}/${props.subjectorder}`)\n        } catch (error) {\n            swal(\"Oops!\", \"Some Error Occur!\", \"error\");\n        }\n    }\n\n    const EditTopic = () => {\n        try {\n            history.push({\n                pathname: `/edittopic/${props.topicname}/${props.topicorder}/${props.topicdescription}/${props.chaptername}/${props.subjectid}/${props.subjectname}/${props.subjectorder}/${props.chapterid}/${props.chapterindex}`,\n                state: {\n                    topicurl: `${props.topicurl}`,\n                    topicthumburl: `${props.topicthumburl}`,\n                    topicindex: `${props.topicindex}`,\n                    topicsource: `${props.topicsource}`\n                }\n            })\n        } catch (error) {\n            swal(\"Oops!\", \"Some Error Occur!\", \"error\");\n        }\n    }\n\n    return (\n        <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n            {(popupState) => (\n                <React.Fragment>\n                    <Link className=\"link_mini\" {...bindTrigger(popupState)}>...\n                    </Link>\n                    <Menu {...bindMenu(popupState)}>\n                        <MenuItem onClick={() => {\n                            popupState.close()\n                            if (props.adddata === \"Add Chapter\") {\n                                AddChapter();\n                            }\n\n                            if (props.adddata === \"Add Topic\") {\n                                AddTopic();\n                            }\n\n                        }}>{props.adddata}</MenuItem>\n                        <MenuItem onClick={() => {\n                            popupState.close()\n                            if (props.editdata === \"Edit Subject\") {\n                                EditSubject();\n                            }\n                            if (props.editdata === \"Edit Chapter\") {\n                                EditChapter();\n                            }\n                            if (props.editdata === \"Edit Topic\") {\n                                EditTopic();\n                            }\n                        }}>{props.editdata}</MenuItem>\n                        <MenuItem onClick={() => {\n                            popupState.close()\n                            if (props.deletedata === \"Delete Subject\") {\n                                DeleteSubject();\n                            }\n\n                            if (props.deletedata === \"Delete Chapter\") {\n                                DeleteChapter();\n                            }\n\n                            if (props.deletedata === \"Delete Topic\") {\n                                DeleteTopic();\n                            }\n                        }}>{props.deletedata}</MenuItem>\n                    </Menu>\n                </React.Fragment>\n            )}\n        </PopupState>\n    );\n}\n","import React from 'react';\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\n// Be sure to include styles at some point, probably during your bootstraping\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport { Fragment } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome, faBookReader, faFlag, faCog, faCommentAlt, faPlusSquare, faPlusCircle, faBookOpen } from '@fortawesome/free-solid-svg-icons'\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst SideMenuBar = () => {\n    const history = useHistory();\n    const location = useLocation();\n    const [admindashboard, Setadmindashboard] = React.useState(false);\n    const [managesubjects, Setmanagesubjects] = React.useState(false);\n    const [managecourses, Setmanagecourses] = React.useState(false);\n    const [reports, Setreports] = React.useState(false);\n    const [feedback, Setfeedback] = React.useState(false);\n    const [settings, Setsettings] = React.useState(false);\n    const [addcoursescategories, Setaddcoursescategories] = React.useState(false);\n    const [addcoursestypes, Setaddcoursestypes] = React.useState(false);\n\n    return (\n        <Fragment>\n            <header>\n                <div className=\"tophead\">\n                    <div className=\"brand-logo\">\n                        Enrollge\n                    </div>\n                </div>\n            </header>\n            <SideNav\n                onSelect={(selected) => {\n                    const to = '/' + selected;\n                    if (location.pathname !== to) {\n                        history.push(to);\n                    }\n                }}>\n                <SideNav.Toggle className=\"nav-toggle\" />\n                <SideNav.Nav>\n                    <NavItem active={admindashboard} onSelect={(e, f) => Setadmindashboard(true)} style={{ paddingTop: '1.8rem' }} eventKey=\"admindashboard\">\n                        <NavIcon>\n                            <FontAwesomeIcon style={{ fontSize: '1.75em' }} icon={faHome} />\n                        </NavIcon>\n                        <NavText>\n                            AdminDashboard\n                        </NavText>\n                    </NavItem>\n\n                    <NavItem active={managesubjects} onSelect={(e, f) => Setmanagesubjects(true)} eventKey=\"managesubjects\">\n                        <NavIcon>\n                            <FontAwesomeIcon style={{ fontSize: '1.75em' }} icon={faBookOpen} />\n                        </NavIcon>\n                        <NavText>\n                            Manage Subjects\n                        </NavText>\n                    </NavItem>\n\n                    <NavItem active={addcoursescategories} onSelect={(e, f) => Setaddcoursescategories(true)} eventKey=\"addcoursescategories\">\n                        <NavIcon>\n                            <FontAwesomeIcon style={{ fontSize: '1.75em' }} icon={faPlusSquare} />\n                        </NavIcon>\n                        <NavText>\n                            Add Courses Categories\n                        </NavText>\n                    </NavItem>\n\n                    <NavItem active={managecourses} onSelect={(e, f) => Setmanagecourses(true)} eventKey=\"managecourses\">\n                        <NavIcon>\n                            <FontAwesomeIcon className=\"side_icons\" style={{ fontSize: '1.75em' }} icon={faBookReader} />\n                        </NavIcon>\n                        <NavText>\n                            Manage Courses\n                        </NavText>\n                    </NavItem>\n\n                    <NavItem active={addcoursestypes} onSelect={(e, f) => Setaddcoursestypes(true)} eventKey=\"addcoursestypes\">\n                        <NavIcon>\n                            <FontAwesomeIcon className=\"side_icons\" style={{ fontSize: '1.75em' }} icon={faPlusCircle} />\n                        </NavIcon>\n                        <NavText>\n                            Add Courses Types\n                        </NavText>\n                    </NavItem>\n\n                    <NavItem active={reports} onSelect={(e, f) => Setreports(true)} eventKey=\"reports\">\n                        <NavIcon>\n                            <FontAwesomeIcon className=\"side_icons\" style={{ fontSize: '1.75em' }} icon={faFlag} />\n                        </NavIcon>\n                        <NavText>\n                            Reports\n                        </NavText>\n                    </NavItem>\n\n                    <NavItem active={feedback} onSelect={(e, f) => Setfeedback(true)} eventKey=\"feedback\">\n                        <NavIcon>\n                            <FontAwesomeIcon className=\"side_icons\" style={{ fontSize: '1.75em' }} icon={faCommentAlt} />\n                        </NavIcon>\n                        <NavText>\n                            Feedback\n                        </NavText>\n                    </NavItem>\n\n                    <NavItem active={settings} onSelect={(e, f) => Setsettings(true)} eventKey=\"settings\">\n                        <NavIcon>\n                            <FontAwesomeIcon className=\"side_icons\" style={{ fontSize: '1.75em' }} icon={faCog} />\n                        </NavIcon>\n                        <NavText>\n                            Settings\n                        </NavText>\n                    </NavItem>\n\n                </SideNav.Nav>\n            </SideNav>\n        </Fragment>\n    );\n}\n\nexport default React.memo(SideMenuBar)\n","import axios from 'axios';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Container, Form, Card, Col, Table, Image } from 'react-bootstrap';\nimport { useParams, useHistory } from 'react-router-dom';\nimport LongMenu from \"./LongMenu\";\nimport swal from 'sweetalert';\nimport Loader from 'react-loader-spinner';\nimport SideMenuBar from '../SideMenuBar';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst AddTopics = (props) => {\n\n    // Here We Need to Three Props Object id of subject and chapter . Chapter Order\n\n    const { subjectid, chapterid, chapterindex, chaptername, subjectname, subjectorder } = useParams();\n\n    const history = useHistory();\n\n    const [Loading, SetLoading] = useState(false);\n\n    const [Topics, SetTopics] = useState({\n        Topic_Name: \"\",\n        Topic_Order: \"\",\n        Topic_Description: \"\",\n        Topic_Url: \"\",\n        Topic_Source: \"\",\n        Topic_ImgUrl: \"\"\n    });\n\n    const [TopicsData, SetTopicsData] = useState([]);\n\n    const seturl = `${REACT_APP_API_URL}/subjects/chapters/topics/${subjectid}/${chapterid}`\n\n    const showurl = `${REACT_APP_API_URL}/subject/${subjectid}`\n\n    useEffect(() => {\n        try {\n            SetLoading(false);\n            const fetchData = async () => {\n                const GetTopics = await axios.get(showurl)\n                const TopicData = await GetTopics.data[0].Chapters[chapterindex].Topics;\n                SetTopicsData(TopicData, SetLoading(true));\n            }\n            fetchData();\n        } catch (error) {\n            swal(\"Error\", \"Some Error Occurred\", 'error');\n        }\n    }, [])\n\n    const submit = async (e) => {\n        e.preventDefault();\n        console.log(Topics)\n        try {\n            const AddTopic = await axios.put(seturl, {\n                Topic_Name: Topics.Topic_Name,\n                Topic_Order: Topics.Topic_Order,\n                Topic_Description: Topics.Topic_Description,\n                Topic_Url: Topics.Topic_Url,\n                Topic_Source: Topics.Topic_Source,\n                Topic_ImgUrl: Topics.Topic_ImgUrl\n            });\n            if (AddTopic.data) {\n                swal(\"Added!\", \"Topic is Successfully Added!\", \"success\");\n            }\n            setTimeout(() => {\n                history.go(0)\n            }, 2000)\n        } catch (error) {\n            swal(\"Error!\", \"Topic is not Added!\", \"error\");\n        }\n    }\n\n\n    const addTopic = async (e) => {\n        const TopicData = { ...Topics }\n        TopicData[e.target.id] = e.target.value;\n        SetTopics(TopicData);\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Topics</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"addsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push(`/addchapter/${subjectname}/${subjectorder}/${subjectid}`)\n                                        }}>\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Topic Details</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => submit(e)}>\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Topic Name</Form.Label>\n                                                    <Form.Control type=\"text\" onChange={(e) => addTopic(e)} id=\"Topic_Name\" value={Topics.Topic_Name} placeholder=\"Enter Topic Name\" required />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Topic Order</Form.Label>\n                                                    <Form.Control type=\"number\" min=\"0\" onChange={(e) => addTopic(e)} id=\"Topic_Order\" value={Topics.Topic_Order} placeholder=\"0 to 999\" required />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Topic Source</Form.Label>\n                                                    <Form.Control as={'select'} type=\"text\" onChange={(e) => addTopic(e)} id=\"Topic_Source\" value={Topics.Topic_Source} placeholder=\"Select Topic Source\" required >\n                                                        <option value=\"\">Select Topic Source</option>\n                                                        <option value=\"Mp4/Mkv From Url\">Mp4/Mkv From Url</option>\n                                                        <option value=\"Youtube\">Youtube</option>\n                                                        <option value=\"Embed Url\">Embed Url</option>\n                                                    </Form.Control>\n                                                </Form.Group>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Topic Video Url</Form.Label>\n                                                    <Form.Control type=\"text\" onChange={(e) => addTopic(e)} id=\"Topic_Url\" value={Topics.Topic_Url} placeholder=\"Enter Topic Video Url\" required />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Topic Thumbnail Url</Form.Label>\n                                                    <Form.Control type=\"text\" onChange={(e) => addTopic(e)} id=\"Topic_ImgUrl\" value={Topics.Topic_ImgUrl} placeholder=\"Enter Topic Thumbnail Url\" required />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Chapter Name</Form.Label>\n                                                    <Form.Control type=\"text\" readOnly={true} value={chaptername} placeholder=\"Chapter Name\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n\n                                            <Form.Group>\n                                                <Form.Label>Topic Desciption</Form.Label>\n                                                <Form.Control as=\"textarea\" onChange={(e) => addTopic(e)} id=\"Topic_Description\" value={Topics.Topic_Description} type=\"text\" placeholder=\"Enter Topic Description\" required />\n                                            </Form.Group>\n\n\n                                            <button type=\"submit\">\n                                                Add Topic\n                                            </button>\n\n                                        </Form>\n                                    </div>\n                                    <br />\n                                    <hr />\n                                    <br />\n\n                                    {/* Topics Details */}\n\n                                    <div>\n                                        <div>\n                                            <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                                <text style={{ color: 'white' }}>All Topics</text>\n                                            </Card>\n                                        </div>\n                                        <hr />\n                                        {/* Loader Before Api Call */}\n                                        {!Loading && <div className=\"preloader\">\n                                            <Loader\n                                                type=\"Hearts\"\n                                                color=\"#202b58\"\n                                                height={60}\n                                                width={60}\n                                            />\n                                        </div>}\n                                        <Table striped bordered hover size=\"md\" responsive>\n                                            <thead>\n                                                <tr>\n                                                    <th>S.No</th>\n                                                    <th>###</th>\n                                                    <th>Thumbnail</th>\n                                                    <th>Name</th>\n                                                    <th>Video Url</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    TopicsData.map((value, i) => {\n                                                        return (\n                                                            <tr>\n                                                                <td key={i}>{i + 1}</td>\n                                                                <td>\n                                                                    <LongMenu subjectorder={subjectorder} topicindex={i} topicname={value.Topic_Name} topicorder={value.Topic_Order} topicsource={value.Topic_Source} topicdescription={value.Topic_Description} chaptername={chaptername} topicurl={value.Topic_Url} topicthumburl={value.Topic_ImgUrl} subjectname={subjectname} chapterindex={chapterindex} subjectid={subjectid} chapterid={chapterid} topicid={value._id} deletedata=\"Delete Topic\" editdata=\"Edit Topic\" />\n                                                                </td>\n                                                                <td><Image style={{ height: '5rem', width: '5rem' }} src={value.Topic_ImgUrl} thumbnail /></td>\n                                                                <td>{value.Topic_Name}</td>\n                                                                <td>{value.Topic_Url}</td>\n                                                            </tr>\n                                                        );\n                                                    })\n                                                }\n                                            </tbody>\n                                        </Table>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(AddTopics);","import React, { Fragment, useState, useEffect } from 'react';\nimport { Card, Form, Container, Col, Table } from 'react-bootstrap';\nimport axios from \"axios\";\nimport LongMenu from \"./LongMenu\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport Loader from 'react-loader-spinner';\nimport SideMenuBar from '../SideMenuBar';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst AddChapters = () => {\n    const { subjectid, subjectname, subjectorder } = useParams();\n\n    const history = useHistory();\n\n    const [Loading, SetLoading] = useState(false);\n    const [Chapter, SetChapter] = useState({\n        Chapter_Name: \"\",\n        Chapter_Order: \"\",\n        Subject_Name: subjectname,\n        Subject_Order: subjectorder\n    })\n    const [ChapterData, SetChapterData] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                SetLoading(false)\n                const GetChapters = await axios.get(`${REACT_APP_API_URL}/subject/${subjectid}`);\n                const ChaptersData = await GetChapters.data[0].Chapters\n                SetChapterData(ChaptersData, SetLoading(true))\n            } catch (error) {\n                swal(\"Error\", \"Some Error Occurred\", 'error');\n            }\n        }\n        fetchData();\n    }, [])\n\n    const AddChapter = async (e) => {\n        e.preventDefault();\n        try {\n            const AddChapterData = await axios.put(`${REACT_APP_API_URL}/subjects/chapters/${subjectid}`, {\n                Chapter_Name: Chapter.Chapter_Name,\n                Chapter_Order: Chapter.Chapter_Order,\n                Subject_Name: Chapter.Subject_Name,\n                Subject_Order: Chapter.Subject_Order\n            })\n\n            if (AddChapterData.data) {\n                swal(\"Added!\", \"Chapter is Successfully Added!\", \"success\");\n            }\n            setTimeout(() => {\n                history.go(0)\n            }, 2000)\n        } catch (eror) {\n            swal(\"Error!\", \"Chapter is not Added!\", \"error\");\n        }\n\n    }\n\n    const addChapter = (e) => {\n        const Chapterdata = { ...Chapter }\n        Chapterdata[e.target.id] = e.target.value\n        SetChapter(Chapterdata);\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Chapters</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"addsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push('/managesubjects')\n                                        }} >\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Chapter Details</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => AddChapter(e)} >\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Chapter Name</Form.Label>\n                                                    <Form.Control required={true} type=\"text\" id=\"Chapter_Name\" onChange={(e) => addChapter(e)} value={Chapter.Chapter_Name} placeholder=\"Enter Chapter Name\" />\n                                                </Form.Group>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Chapter Order</Form.Label>\n                                                    <Form.Control required={true} type=\"number\" min=\"0\" id=\"Chapter_Order\" onChange={(e) => addChapter(e)} value={Chapter.Chapter_Order} placeholder=\"0 to 999\" />\n                                                </Form.Group>\n                                            </Form.Row>\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Subject Name</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Subject_Name\" readOnly={true} onChange={(e) => addChapter(e)} value={subjectname} placeholder=\"Enter Subject Name\" />\n                                                </Form.Group>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Subject Order</Form.Label>\n                                                    <Form.Control type=\"number\" readOnly={true} id=\"Subject_Order\" onChange={(e) => addChapter(e)} value={subjectorder} placeholder=\"0 to 999\" />\n                                                </Form.Group>\n                                            </Form.Row>\n                                            <button type=\"submit\">\n                                                Add Chapter\n                                             </button>\n                                        </Form>\n                                    </div>\n                                    <br />\n                                    <hr />\n                                    <br />\n\n                                    {/* Chapters Details */}\n\n                                    <div>\n                                        <div>\n                                            <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                                <text style={{ color: 'white' }}>All Chapters of that Subject</text>\n                                            </Card>\n                                        </div>\n                                        <hr />\n                                        {/* Loader Before Api Call */}\n                                        {!Loading && <div className=\"preloader\" >\n                                            <Loader\n                                                type=\"Hearts\"\n                                                color=\"#202b58\"\n                                                height={60}\n                                                width={60}\n                                            />\n                                        </div>}\n\n                                        <Table striped bordered hover size=\"md\" responsive>\n                                            <thead>\n                                                <tr>\n                                                    <th>S.No</th>\n                                                    <th>###</th>\n                                                    <th>Chapter Name</th>\n                                                    <th>Chapter Order</th>\n                                                    <th>Subject Name</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    ChapterData.map((value, i) => {\n                                                        return (\n                                                            <tr>\n                                                                <td key={i}>{i + 1}</td>\n                                                                <td>\n                                                                    <LongMenu subjectname={subjectname} subjectorder={subjectorder} chapterindex={i} chaptername={value.Chapter_Name} chapterorder={value.Chapter_Order} chapterid={value._id} subjectid={subjectid} deletedata=\"Delete Chapter\" adddata=\"Add Topic\" editdata=\"Edit Chapter\" />\n                                                                </td>\n                                                                <td>{value.Chapter_Name}</td>\n                                                                <td>{value.Chapter_Order}</td>\n                                                                <td>{value.Subject_Name}</td>\n                                                            </tr>\n                                                        )\n                                                    })\n                                                }\n                                            </tbody>\n                                        </Table>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(AddChapters);","import axios from 'axios';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Card, Container, Form, Col } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\nimport Cookies from 'js-cookie';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst AddSubjects = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    const [SubjectName, SetSubjectName] = useState(\"\");\n    const [SubjectOrder, SetSubjectOrder] = useState(\"\");\n    const [SubjectCourse, SetSubjectCourse] = useState(\"\");\n    const [SubjectBranch, SetSubjectBranch] = useState(\"\");\n    const [SubjectSemester, SetSubjectSemester] = useState(\"\");\n    const [Categories, SetCategories] = useState([]);\n    const [Branches, SetBranches] = useState([]);\n    const [Semesters, SetSemesters] = useState([]);\n\n    const url = `${REACT_APP_API_URL}/subjects`\n    const catergoriesurl = `${REACT_APP_API_URL}/coursescategories`\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const CategoriesData = await axios.get(catergoriesurl)\n            SetCategories(CategoriesData.data);\n        }\n        fetchData();\n    }, [])\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const AddSubjectData = await axios.post(url, {\n                Subject_Name: SubjectName,\n                Subject_Order: SubjectOrder,\n                Subject_Course: SubjectCourse,\n                Subject_Branch: SubjectBranch,\n                Subject_Semester: SubjectSemester\n            })\n            if (AddSubjectData.data) {\n                swal(\"Addded!\", \"Subject is Successfully Added!\", \"success\");\n            }\n        } catch (error) {\n            swal(\"Not Added!\", \"Subject is Not Added!\", \"error\");\n        }\n    }\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Subject</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"addsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push('/managesubjects')\n                                        }} >\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Subject Details</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => submit(e)} >\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\">\n                                                    <Form.Label>Subject Name</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} onChange={(e) => SetSubjectName(e.target.value)} value={SubjectName} placeholder=\"Enter Subject Name\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Subject Order</Form.Label>\n                                                    <Form.Control type=\"number\" required={true} min=\"0\" onChange={(e) => SetSubjectOrder(e.target.value)} value={SubjectOrder} placeholder=\"Enter Subject Order\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\" >\n                                                    <Form.Label>Subject Course</Form.Label>\n                                                    <Form.Control as={'select'} type=\"text\" required={true} onChange={(e) => {\n                                                        SetSubjectCourse(e.target.value)\n                                                        if (e.target.value != \"\") {\n                                                            let index = Categories.map(function (data) { return data.Course_Type; }).indexOf(e.target.value);\n                                                            SetBranches(Categories[index].Course_Branch)\n                                                            SetSemesters(Categories[index].Course_Semester)\n                                                        } else {\n                                                            SetBranches([])\n                                                            SetSemesters([])\n                                                        }\n                                                    }} value={SubjectCourse} placeholder=\"Select Course of Subject\" >\n                                                        <option value=\"\">Select Course of the Subject</option>\n                                                        {\n                                                            Categories.map((value, index) => {\n                                                                return (\n                                                                    <option value={value.Course_Type} key={index}>{value.Course_Type}</option>\n                                                                );\n                                                            })\n                                                        }\n                                                    </Form.Control>\n                                                </Form.Group>\n                                            </Form.Row>\n\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\" >\n                                                    <Form.Label>Subject Branch</Form.Label>\n                                                    <Form.Control as={'select'} type=\"text\" required={true} onChange={(e) => SetSubjectBranch(e.target.value)} value={SubjectBranch} placeholder=\"Select Branch of Subject\" >\n                                                        <option value=\"\">Select Course to See Branch Options</option>\n                                                        {\n                                                            Branches.map((value, index) => {\n                                                                return (\n                                                                    <option value={value} key={index}>{value}</option>\n                                                                );\n                                                            })\n                                                        }\n                                                    </Form.Control>\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Subject Semester</Form.Label>\n                                                    <Form.Control as={\"select\"} type=\"number\" required={true} onChange={(e) => SetSubjectSemester(e.target.value)} value={SubjectSemester} placeholder=\"Select Semester of Subject\" >\n                                                        <option value=\"\">Select Course to See Semester Options</option>\n                                                        {\n                                                            Semesters.map((value, index) => {\n                                                                return (\n                                                                    <option value={value} key={index}>{value}</option>\n                                                                );\n                                                            })\n                                                        }\n                                                    </Form.Control>\n                                                </Form.Group>\n                                            </Form.Row>\n                                            <button type=\"submit\">\n                                                Add Subject\n                                            </button>\n                                        </Form>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(AddSubjects);","import axios from 'axios';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Card, Image, Table, InputGroup, FormControl } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport LongMenu from './LongMenu';\nimport Loader from \"react-loader-spinner\";\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\nimport Cookies from \"js-cookie\";\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst SubjectsManagement = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    const [Loading, SetLoading] = useState(false);\n    const [Subjects, SetSubjects] = useState([])\n    const [Search, SetSearch] = useState()\n    const [SearchData, SetSearchData] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                SetLoading(false);\n                const url = `${REACT_APP_API_URL}/subjects`\n                const SubjectsInfo = await axios.get(url);\n                SetSubjects(SubjectsInfo.data);\n                SetSearchData(SubjectsInfo.data, SetLoading(true));\n            }\n            catch (error) {\n                swal(\"Error\", \"Some Error Occurred\", 'error');\n            }\n        }\n        fetchData();\n    }, []);\n\n    const handleChange = (value) => {\n        SetSearch(value);\n        filterData(value);\n    }\n\n    const filterData = (value) => {\n        const lowercasedValue = value.toLowerCase().trim();\n        if (lowercasedValue === \"\") {\n            SetSearchData(Subjects)\n        } else {\n            const filteredData = SearchData.filter(item => {\n                return Object.keys(item).some(key =>\n                    item[key].toString().toLowerCase().includes(lowercasedValue)\n                );\n            });\n            SetSearchData(filteredData)\n        }\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <div className=\"subjects_area\">\n                <div className=\"subjects_fdiv\">\n                    <Card className=\"subjects_fcard\">\n                        <Card.Body>\n                            <h1>Subjects Management</h1>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"subject_sdiv\">\n                    <Card className=\"subjects_scard\">\n                        <Card.Body>\n                            {/* Search Area Tab */}\n                            <div className=\"subjects_search\">\n                                <div>\n                                    <button className=\"main_btn\" onClick={() => {\n                                        history.push('/addsubject')\n                                    }}>Add Subject</button>\n                                </div>\n                                <div>\n                                    <InputGroup className=\"mb-2 input-area\">\n                                        <FormControl\n                                            className=\"mr-5\"\n                                            placeholder=\"Search Subject\"\n                                            value={Search}\n                                            onChange={(e) => handleChange(e.target.value)}\n                                        />\n\n                                    </InputGroup>\n\n                                </div>\n                            </div>\n                            <hr />\n                            {/* Loader Before Api Call */}\n                            {!Loading && <div className=\"preloader\">\n                                <Loader\n                                    type=\"Hearts\"\n                                    color=\"#202b58\"\n                                    height={60}\n                                    width={60}\n                                />\n                            </div>}\n                            {/* Subjects Details Table */}\n                            <Table striped bordered hover size=\"md\" responsive>\n\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>###</th>\n                                        <th>Course of Subject</th>\n                                        <th>Branch of Subject </th>\n                                        <th>Subject Name</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        SearchData.map((value, index) => {\n                                            return (\n                                                <>\n                                                    <tr>\n                                                        <td key={index} >{index + 1}</td>\n                                                        <td><LongMenu subjectid={value._id} subjectname={value.Subject_Name} subjectsem={value.Subject_Semester} subjectthumburl={value.Subject_imgurl} subjectcourse={value.Subject_Course} subjectbranch={value.Subject_Branch} subjectorder={value.Subject_Order} deletedata=\"Delete Subject\" adddata=\"Add Chapter\" editdata=\"Edit Subject\" /></td>\n                                                        <td>{value.Subject_Course}</td>\n                                                        <td>{value.Subject_Branch}</td>\n                                                        <td>{value.Subject_Name}</td>\n                                                    </tr>\n                                                </>\n                                            );\n                                        })\n                                    }\n                                </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default React.memo(SubjectsManagement);","import axios from 'axios';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Card, Container, Form, Col } from 'react-bootstrap';\nimport { useParams, useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst EditSubject = () => {\n\n    const { subjectid, subjectname, subjectorder, subjectsem, subjectcourse, subjectbranch } = useParams();\n    const history = useHistory();\n\n    const [Update_SubjectName, SetUpdate_SubjectName] = useState(subjectname);\n    const [Update_SubjectOrder, SetUpdate_SubjectOrder] = useState(subjectorder);\n    const [Update_SubjectSemester, SetUpdate_SubjectSemester] = useState(subjectsem);\n    const [Update_SubjectCourse, SetUpdate_SubjectCourse] = useState(subjectcourse);\n    const [Update_SubjectBranch, SetUpdate_SubjectBranch] = useState(subjectbranch);\n\n    const [Categories, SetCategories] = useState([]);\n    const [Branches, SetBranches] = useState([]);\n    const [Semesters, SetSemesters] = useState([]);\n    const catergoriesurl = `${REACT_APP_API_URL}/coursescategories`\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const CategoriesData = await axios.get(catergoriesurl)\n            SetCategories(CategoriesData.data);\n            let index = CategoriesData.data.map(function (data) { return data.Course_Type; }).indexOf(subjectcourse);\n            SetBranches(CategoriesData.data[index].Course_Branch);\n            SetSemesters(CategoriesData.data[index].Course_Semester);\n        }\n        fetchData();\n    }, []);\n\n    const seturl = `${REACT_APP_API_URL}/subjects/${subjectid}`\n\n    const update = async (e) => {\n        e.preventDefault();\n        try {\n            const UpdateSubjectData = await axios.patch(seturl, {\n                Subject_Name: Update_SubjectName,\n                Subject_Order: Update_SubjectOrder,\n                Subject_Semester: Update_SubjectSemester,\n                Subject_Course: Update_SubjectCourse,\n                Subject_Branch: Update_SubjectBranch\n            })\n            if (UpdateSubjectData.data) {\n                swal(\"Updated!\", \"Subject is Successfully Updated!\", \"success\");\n            }\n        } catch (error) {\n            swal(\"Not Updated!\", \"Subject is Not Updated!\", \"error\");\n        }\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Subject</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"addsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push('/managesubjects')\n                                        }} >\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Subject Details</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => update(e)} >\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\">\n                                                    <Form.Label>Subject Name</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Subject_Name\" onChange={(e) => SetUpdate_SubjectName(e.target.value)} value={Update_SubjectName} placeholder=\"Enter Subject Name\" required />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Subject Order</Form.Label>\n                                                    <Form.Control type=\"number\" min=\"0\" id=\"Subject_Order\" onChange={(e) => SetUpdate_SubjectOrder(e.target.value)} value={Update_SubjectOrder} placeholder=\"Enter Subject Order\" required />\n                                                </Form.Group>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Subject Course</Form.Label>\n                                                    <Form.Control as={'select'} type=\"text\" id=\"Subject_Course\" onChange={(e) => {\n                                                        SetUpdate_SubjectCourse(e.target.value)\n                                                        if (e.target.value != \"\") {\n                                                            let index = Categories.map(function (data) { return data.Course_Type; }).indexOf(e.target.value);\n                                                            SetBranches(Categories[index].Course_Branch)\n                                                            SetSemesters(Categories[index].Course_Semester)\n                                                        } else {\n                                                            SetBranches([])\n                                                            SetSemesters([])\n                                                        }\n                                                    }} value={Update_SubjectCourse} placeholder=\"Select Course of Subject\" required >\n                                                        <option value=\"\">Select Course of the Subject</option>\n                                                        {\n                                                            Categories.map((value, index) => {\n                                                                return (\n                                                                    <option value={value.Course_Type} key={index}>{value.Course_Type}</option>\n                                                                );\n                                                            })\n                                                        }\n                                                    </Form.Control>\n                                                </Form.Group>\n\n\n                                            </Form.Row>\n\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Subject Branch</Form.Label>\n                                                    <Form.Control as={'select'} type=\"text\" id=\"Subject_Branch\" onChange={(e) => SetUpdate_SubjectBranch(e.target.value)} value={Update_SubjectBranch} placeholder=\"Select Branch of Subject\" required >\n                                                        <option value=\"\">Select Course to See Branch Options</option>\n                                                        {\n                                                            Branches.map((value, index) => {\n                                                                return (\n                                                                    <option value={value} key={index}>{value}</option>\n                                                                );\n                                                            })\n                                                        }\n                                                    </Form.Control>\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Subject Semester</Form.Label>\n                                                    <Form.Control as={'select'} type=\"number\" onChange={(e) => SetUpdate_SubjectSemester(e.target.value)} value={Update_SubjectSemester} placeholder=\"Select Semester of Subject\" required >\n                                                        <option value=\"\">Select Course to See Branch Options</option>\n                                                        {\n                                                            Semesters.map((value, index) => {\n                                                                return (\n                                                                    <option value={value} key={index}>{value}</option>\n                                                                );\n                                                            })\n                                                        }\n                                                    </Form.Control>\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <button type=\"submit\">\n                                                Update Subject\n                                            </button>\n\n                                        </Form>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(EditSubject);","import React, { Fragment, useState } from 'react';\nimport { Card, Form, Container, Col } from 'react-bootstrap';\nimport axios from \"axios\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst EditChapters = () => {\n\n    const history = useHistory();\n    const { subjectid, chapterid, chaptername, chapterorder, subjectname, subjectorder } = useParams();\n\n    const [UpdateChapterData, SetUpdateChapterData] = useState({\n        'Chapter_Name': chaptername,\n        'Chapter_Order': chapterorder,\n        'Subject_Name': subjectname,\n        'Subject_Order': subjectorder\n    });\n\n    const seturl = `${REACT_APP_API_URL}/subjects/chapters/${subjectid}/${chapterid}`\n\n    const UpdateChapter = async (e) => {\n        e.preventDefault();\n        try {\n            const UpdatingChapter = await axios.patch(seturl, {\n                \"Chapters.$.Chapter_Name\": UpdateChapterData.Chapter_Name,\n                \"Chapters.$.Chapter_Order\": UpdateChapterData.Chapter_Order\n            }\n            );\n\n            if (UpdatingChapter.data) {\n                swal(\"Updated!\", \"Chapter is Successfully Updated!\", \"success\");\n            }\n        } catch (eror) {\n            swal(\"Error!\", \"Chapter is not Updated!\", \"error\");\n        }\n    }\n\n    const addChapter = (e) => {\n        const Chapterdata = { ...UpdateChapterData }\n        Chapterdata[e.target.id] = e.target.value\n        SetUpdateChapterData(Chapterdata);\n    }\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"editsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Chapters</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"addsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push(`/addchapter/${subjectname}/${subjectorder}/${subjectid}`)\n                                        }} >\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Chapter Details</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => UpdateChapter(e)} >\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\" >\n                                                    <Form.Label>Chapter Name</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Chapter_Name\" value={UpdateChapterData.Chapter_Name} onChange={(e) => addChapter(e)} placeholder=\"Enter Chapter Name\" required />\n                                                </Form.Group>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Chapter Order</Form.Label>\n                                                    <Form.Control type=\"number\" min=\"0\" id=\"Chapter_Order\" value={UpdateChapterData.Chapter_Order} onChange={(e) => addChapter(e)} placeholder=\"0 to 999\" required />\n                                                </Form.Group>\n                                            </Form.Row>\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Subject Name</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Subject_Name\" value={UpdateChapterData.Subject_Name} readOnly={true} onChange={(e) => addChapter(e)} placeholder=\"Enter Subject Name\" />\n                                                </Form.Group>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Subject Order</Form.Label>\n                                                    <Form.Control type=\"number\" min=\"0\" readOnly={true} id=\"Subject_Order\" value={UpdateChapterData.Subject_Order} onChange={(e) => addChapter(e)} placeholder=\"0 to 999\" />\n                                                </Form.Group>\n                                            </Form.Row>\n                                            <button type=\"submit\">\n                                                Update Chapter\n                                             </button>\n                                        </Form>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(EditChapters);","import axios from 'axios';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Container, Form, Card, Col } from 'react-bootstrap';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst EditTopics = (props) => {\n\n    // Here We Need to Three Props Object id of subject and chapter . Chapter Order\n    const { topicname, topicorder, topicdescription, subjectid, subjectname, subjectorder, chapterid, chaptername, chapterindex } = useParams();\n\n    const location = useLocation();\n    const history = useHistory();\n\n    const [UpdateTopic, SetUpdateTopic] = useState({\n        \"Topic_Name\": topicname,\n        \"Topic_Order\": topicorder,\n        \"Topic_Description\": topicdescription,\n        \"Topic_Url\": location.state.topicurl,\n        \"Topic_Source\": location.state.topicsource,\n        \"Topic_ImgUrl\": location.state.topicthumburl\n    });\n\n    const seturl = `${REACT_APP_API_URL}/subjects/chapters/topics/${subjectid}/${chapterid}/${location.state.topicindex}`\n\n    useEffect(() => {\n        console.log(subjectorder)\n    }, [])\n\n    const updatetopic = async (e) => {\n        e.preventDefault();\n        try {\n            const UpdateTopicData = await axios.patch(seturl, {\n                Topic_Name: UpdateTopic.Topic_Name,\n                Topic_Order: UpdateTopic.Topic_Order,\n                Topic_Description: UpdateTopic.Topic_Description,\n                Topic_Url: UpdateTopic.Topic_Url,\n                Topic_Source: UpdateTopic.Topic_Source,\n                Topic_ImgUrl: UpdateTopic.Topic_ImgUrl\n            });\n            if (UpdateTopicData.data) {\n                swal(\"Updated!\", \"Topic is Successfully Updated!\", \"success\");\n            }\n        } catch (error) {\n            swal(\"Error!\", \"Topic is not Updated!\", \"error\");\n        }\n    }\n\n\n    const addTopic = async (e) => {\n        const TopicData = { ...UpdateTopic }\n        TopicData[e.target.id] = e.target.value;\n        SetUpdateTopic(TopicData);\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Update Topic</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"addsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push({\n                                                pathname: `/addtopic/${subjectid}/${subjectname}/${subjectorder}/${chapterid}/${chaptername}/${chapterindex}`\n                                            })\n                                        }}>\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Topic Details</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => updatetopic(e)}>\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Topic Name</Form.Label>\n                                                    <Form.Control type=\"text\" onChange={(e) => addTopic(e)} id=\"Topic_Name\" value={UpdateTopic.Topic_Name} placeholder=\"Enter Topic Name\" required />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Topic Order</Form.Label>\n                                                    <Form.Control type=\"number\" min=\"0\" onChange={(e) => addTopic(e)} id=\"Topic_Order\" value={UpdateTopic.Topic_Order} placeholder=\"0 to 999\" required />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Topic Source</Form.Label>\n                                                    <Form.Control as={'select'} type=\"text\" onChange={(e) => addTopic(e)} id=\"Topic_Source\" value={UpdateTopic.Topic_Source} placeholder=\"Select Topic Source\" required >\n                                                        <option>Mp4/Mkv From Url</option>\n                                                        <option>Youtube</option>\n                                                        <option>Embed Url</option>\n                                                    </Form.Control>\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Topic Video Url</Form.Label>\n                                                    <Form.Control type=\"text\" onChange={(e) => addTopic(e)} id=\"Topic_Url\" value={UpdateTopic.Topic_Url} placeholder=\"Enter Topic Video Url\" required />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Topic Thumbnail Url</Form.Label>\n                                                    <Form.Control type=\"text\" onChange={(e) => addTopic(e)} id=\"Topic_ImgUrl\" value={UpdateTopic.Topic_ImgUrl} placeholder=\"Enter Topic Thumbnail Url\" required />\n                                                </Form.Group>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Chapter Name</Form.Label>\n                                                    <Form.Control type=\"text\" readOnly={true} value={chaptername} placeholder=\"Enter Chapter Name \" />\n                                                </Form.Group>\n                                            </Form.Row>\n                                            <Form.Group >\n                                                <Form.Label>Topic Description</Form.Label>\n                                                <Form.Control as=\"textarea\" onChange={(e) => addTopic(e)} id=\"Topic_Description\" value={UpdateTopic.Topic_Description} type=\"text\" placeholder=\"Enter Topic Description\" required />\n                                            </Form.Group>\n                                            <button type=\"submit\">\n                                                Update Topic\n                                            </button>\n\n                                        </Form>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(EditTopics);","import { Fragment } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faVideo } from '@fortawesome/free-solid-svg-icons'\n\nexport const MiniCard = (props) => {\n    return (\n        <Fragment>\n            <Card style={{ backgroundColor: '#202b58', margin: '3rem', borderRadius: \"1rem\" }} className=\"mb-2\">\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <div>\n                        <FontAwesomeIcon style={{ marginLeft: '1.5rem' }} color=\"whitesmoke\" size=\"2x\" icon={faVideo} />\n                    </div>\n                    <div>\n                        <div style={{ borderLeft: \"1px solid white\", height: '5rem', marginLeft: \"2rem\" }} />\n                    </div>\n                    <div>\n                        <Card.Body style={{ color: 'whitesmoke', textAlign: 'center' }} >\n                            <Card.Title style={{ fontWeight: \"bolder\" }} >{props.Title}</Card.Title>\n                            <Card.Text style={{ fontWeight: 'bold' }}>\n                                {props.number}\n                            </Card.Text>\n                        </Card.Body>\n                    </div>\n                </div>\n            </Card>\n        </Fragment>\n    );\n}","import React, { Fragment, useEffect, useState } from 'react';\nimport { MiniCard } from './MiniCards'\nimport SideMenuBar from './SideMenuBar';\nimport Cookies from \"js-cookie\";\nimport { useHistory } from 'react-router';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { SemipolarLoading } from 'react-loadingg';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst AdminDashboard = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    const [Subjects, SetSubjects] = useState([]);\n    const [Courses, SetCourses] = useState([]);\n    const [TotalChapters, SetTotalChapters] = useState(null);\n    const [isLoading, SetisLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const subjecturl = `${REACT_APP_API_URL}/subjects`\n                const SubjectsInfo = await axios.get(subjecturl);\n                const courseurl = `${REACT_APP_API_URL}/courses`\n                const CoursesInfo = await axios.get(courseurl);\n                SetCourses(CoursesInfo.data);\n                SetSubjects(SubjectsInfo.data, SetisLoading(false));\n            }\n            catch (error) {\n                swal(\"Error\", \"Some Error Occurred\", 'error');\n            }\n        }\n        fetchData();\n    }, [isLoading]);\n\n    useEffect(() => {\n        let i;\n        let sum = 0;\n        for (i = 0; i < Subjects.length; i++) {\n            sum += parseInt(JSON.stringify(Subjects[i].Chapters.length));\n        }\n        SetTotalChapters(sum);\n    })\n\n    if (isLoading) {\n        return (\n            <div>\n                <SideMenuBar />\n                <SemipolarLoading size=\"large\" color=\"#202b58\" />\n            </div>\n        );\n    }\n\n    if (!isLoading) {\n        return (\n            <Fragment>\n                <SideMenuBar />\n                <div className=\"admin_div\">\n                    <div style={{ display: 'flex', height: '100%', width: '100%', flexWrap: 'wrap', justifyContent: \"center\", alignItems: 'center' }}>\n                        <div>\n                            <MiniCard Title=\"Total Subjects\" number={Subjects.length} />\n                        </div>\n                        <div>\n                            <MiniCard Title=\"Total Chapters\" number={TotalChapters} />\n                        </div>\n                        <div>\n                            <MiniCard Title=\"Total Courses\" number={Courses.length} />\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default React.memo(AdminDashboard);","import axios from \"axios\";\nimport React from \"react\";\nimport { Fragment } from \"react\";\nimport ContentEditable from \"react-contenteditable\";\nimport sanitizeHtml from \"sanitize-html\";\nimport swal from 'sweetalert';\nimport { SemipolarLoading } from 'react-loadingg';\n\nconst { REACT_APP_API_URL } = process.env;\n\nclass TermsAndConditions extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      html: ``,\n      termsandconditionsid: '',\n      editable: true,\n      HtmlView: true,\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    const url = `${REACT_APP_API_URL}/settings`\n    axios.get(url)\n      .then((value) => {\n        this.setState({ html: value.data[0].TermsAndConditions })\n        this.setState({ termsandconditionsid: value.data[0]._id }, this.setState({ isLoading: false }))\n      })\n      .catch((e) => {\n        swal(\"Error!\", \"Server Error Occurred, Please Try Again!\", \"error\");\n      })\n  }\n\n  handleChange = evt => {\n    this.setState({ html: evt.target.value });\n  };\n\n  sanitizeConf = {\n    allowedTags: [\"b\", \"i\", \"em\", \"strong\", \"a\", \"p\", \"h1\"],\n    allowedAttributes: { a: [\"href\"] }\n  };\n\n  sanitize = () => {\n    this.setState({ html: sanitizeHtml(this.state.html, this.sanitizeConf) });\n  };\n\n  toggleEditable = () => {\n    this.setState({ editable: !this.state.editable });\n  };\n  toggleView = () => {\n    this.setState({ HtmlView: !this.state.HtmlView });\n  };\n\n  ChangeTermsAndConditions = async () => {\n    try {\n      const seturl = `${REACT_APP_API_URL}/settings/${this.state.termsandconditionsid}`\n      const UpdateTermsAndConditions = await axios.patch(seturl, {\n        TermsAndConditions: this.state.html\n      });\n      if (UpdateTermsAndConditions.data) {\n        swal(\"Updated!\", \"Terms And Conditions is Successfully Update!\", \"success\");\n      }\n      if (!UpdateTermsAndConditions.data) {\n        swal(\"Error!\", \"Server Error Occurred, Please Try Again!\", \"error\");\n      }\n    } catch (error) {\n      swal(\"Error!\", \"Some Error Occurred, Please Try Again!\", \"error\");\n    }\n  }\n\n  render = () => {\n\n    if (this.state.isLoading) {\n      return (\n        <div>\n          <SemipolarLoading size=\"large\" color=\"#202b58\" />\n        </div>\n      );\n    }\n\n    if (!this.state.isLoading) {\n      return (\n        <Fragment>\n          <h3>Terms And Conditions</h3>\n          <EditButton cmd=\"Italic\" />\n          <EditButton cmd=\"Bold\" />\n          <EditButton cmd=\"formatBlock\" arg=\"h1\" name=\"Heading\" />\n          <EditButton\n            cmd=\"createLink\"\n            arg=\"your link url\"\n            name=\"Hyperlink\"\n          />\n          <button onClick={this.toggleEditable}>\n            Make {this.state.editable ? \"readonly\" : \"editable\"}\n          </button>\n\n          <button onClick={this.toggleView}>\n            Make {this.state.HtmlView ? \"Html View\" : \"Text View\"}\n          </button>\n\n          {this.state.HtmlView ?\n            <ContentEditable\n              className=\"editable\"\n              tagName=\"pre\"\n              html={this.state.html} // innerHTML of the editable div\n              disabled={!this.state.editable} // use true to disable edition\n              onChange={this.handleChange} // handle innerHTML change\n              onBlur={this.sanitize}\n            /> :\n            <textarea\n              className=\"editable\"\n              value={this.state.html}\n              onChange={this.handleChange}\n              onBlur={this.sanitize}\n            />\n          }\n          <div style={{ marginTop: '1rem' }}>\n            <button onClick={this.ChangeTermsAndConditions}>Change Terms And Conditions</button>\n          </div>\n        </Fragment>\n      );\n    }\n  };\n}\n\nfunction EditButton(props) {\n  return (\n    <button\n      key={props.cmd}\n      onMouseDown={evt => {\n        evt.preventDefault(); // Avoids loosing focus from the editable area\n        document.execCommand(props.cmd, false, props.arg); // Send the command to the browser\n      }}\n    >\n      {props.name || props.cmd}\n    </button>\n  );\n}\n\nexport default TermsAndConditions;\n","import React, { Fragment } from \"react\";\nimport { Card } from 'react-bootstrap';\nimport SideMenuBar from \"./SideMenuBar\";\nimport Cookies from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\nimport TermsAndConditions from './TermsAndConditions';\n\nconst Settings = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <div className=\"subjects_area\">\n                <div className=\"subjects_fdiv\">\n                    <Card className=\"subjects_fcard\">\n                        <Card.Body>\n                            <h1>System Settings</h1>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"subject_sdiv\">\n                    <Card className=\"subjects_scard\">\n                        <Card.Body>\n                            <hr />\n                            <TermsAndConditions />\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default React.memo(Settings);","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\nimport { Link } from 'react-router-dom';\nimport { Modal, Form } from 'react-bootstrap'\nimport swal from 'sweetalert';\nimport { Fragment } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport MultipleValueTextInput from 'react-multivalue-text-input';\n\nconst { REACT_APP_API_URL } = process.env;\n\n\nexport default function MenuPopupState(props) {\n\n    const history = useHistory();\n    const [ShowReportModel, SetShowReportModel] = React.useState(false);\n    const [ShowFeedbackModel, SetShowFeedbackModel] = React.useState(false);\n    const [ShowCourseCategoryModel, SetShowCourseCategoryModel] = React.useState(false);\n    const [ShowCourseTypeModel, SetShowCourseTypeModel] = React.useState(false);\n\n    const [UpdateCourseName, SetUpdateCourseName] = React.useState(props.coursename);\n    const [UpdateCourseBranches, SetUpdateCourseBranches] = React.useState(props.coursebranches);\n    const [UpdateCourseSemesters, SetUpdateCourseSemesters] = React.useState(props.coursesemesters);\n\n    const [UpdateCourseTypeName, SetUpdateCourseTypeName] = React.useState(props.coursetype);\n    const [UpdateCourseTypeDescription, SetUpdateCourseTypeDescription] = React.useState(props.coursetypedescription);\n    const [UpdateCourseTypeImgUrl, SetUpdateCourseTypeImgUrl] = React.useState(props.coursetypeimgurl);\n\n\n    //  For Delete Reports And Feedback\n    const DeleteFeedback = async () => {\n        try {\n            const DeleteFeedbackData = await axios.delete(`${REACT_APP_API_URL}/feedback/${props.feedbackid}`)\n            if (DeleteFeedbackData.data) {\n                swal(\"Deleted!\", \"Feedback is Successfully Deleted!\", \"success\");\n                setTimeout(() => {\n                    history.go(0)\n                }, 2000)\n            }\n            if (!DeleteFeedbackData.data) {\n                swal(\"Error!\", \"Server Error Occurred, Please Try Again!\", \"error\");\n            }\n\n        } catch (error) {\n            swal(\"Error!\", \"Some Error Occurred, Please Try Again!\", \"error\");\n        }\n    }\n\n    const DeleteReport = async () => {\n        try {\n            const DeleteReportData = await axios.delete(`${REACT_APP_API_URL}/report/${props.reportid}`)\n            if (DeleteReportData.data) {\n                swal(\"Deleted!\", \"Report is Successfully Deleted!\", \"success\");\n                setTimeout(() => {\n                    history.go(0)\n                }, 2000)\n            }\n            if (!DeleteReportData.data) {\n                swal(\"Error!\", \"Server Error Occurred, Please Try Again!\", \"error\");\n            }\n        } catch (error) {\n            swal(\"Error!\", \"Some Error Occurred, Please Try Again!\", \"error\");\n        }\n    }\n\n    const DeleteCourseCategory = async () => {\n        try {\n            const DeleteCourseCategoryData = await axios.delete(`${REACT_APP_API_URL}/coursecategory/${props.coursecategoryid}`)\n            if (DeleteCourseCategoryData.data) {\n                swal(\"Deleted!\", \"Course Category is Successfully Deleted!\", \"success\");\n                setTimeout(() => {\n                    history.go(0)\n                }, 2000)\n            }\n            if (!DeleteCourseCategoryData.data) {\n                swal(\"Error!\", \"Server Error Occurred, Please Try Again!\", \"error\");\n            }\n\n        } catch (error) {\n            swal(\"Error!\", \"Some Error Occurred, Please Try Again!\", \"error\");\n        }\n    }\n\n    const DeleteCourseType = async () => {\n        try {\n            const DeleteCourseTypeData = await axios.delete(`${REACT_APP_API_URL}/coursetype/${props.coursetypesid}`)\n            if (DeleteCourseTypeData.data) {\n                swal(\"Deleted!\", \"Course Type is Successfully Deleted!\", \"success\");\n                setTimeout(() => {\n                    history.go(0)\n                }, 2000)\n            }\n            if (!DeleteCourseTypeData.data) {\n                swal(\"Error!\", \"Server Error Occurred, Please Try Again!\", \"error\");\n            }\n\n        } catch (error) {\n            swal(\"Error!\", \"Some Error Occurred, Please Try Again!\", \"error\");\n        }\n    }\n\n\n    // For Sending Notifications\n    const SendFeedbackNotification = async () => {\n    }\n\n    const SendReportNotification = async () => {\n    }\n\n\n    // For Updating Course Category\n    const UpdateCourseCategory = async () => {\n        try {\n            const seturl = `${REACT_APP_API_URL}/coursecategory/${props.coursecategoryid}`\n            const UpdateCourseCategoryData = await axios.patch(seturl, {\n                Course_Type: UpdateCourseName,\n                Course_Branch: UpdateCourseBranches,\n                Course_Semester: UpdateCourseSemesters\n            });\n            if (UpdateCourseCategoryData.data) {\n                swal(\"Updated!\", \"Course Category is Successfully Update!\", \"success\");\n                setTimeout(() => {\n                    history.go(0)\n                }, 2000)\n                SetShowCourseCategoryModel(false);\n            }\n            if (!UpdateCourseCategoryData.data) {\n                swal(\"Error!\", \"Server Error Occurred, Please Try Again!\", \"error\");\n                SetShowCourseCategoryModel(false);\n            }\n        } catch (error) {\n            swal(\"Error!\", \"Some Error Occurred, Please Try Again!\", \"error\");\n            SetShowCourseCategoryModel(false);\n        }\n    }\n\n    const UpdateCourseType = async () => {\n        try {\n            const seturl = `${REACT_APP_API_URL}/coursetype/${props.coursetypesid}`\n            const UpdateCourseTypeData = await axios.patch(seturl, {\n                Course_Type: UpdateCourseTypeName,\n                Course_TypeDescription: UpdateCourseTypeDescription,\n                Course_TypeImgUrl: UpdateCourseTypeImgUrl\n            });\n            if (UpdateCourseTypeData.data) {\n                swal(\"Updated!\", \"Course Type is Successfully Update!\", \"success\");\n                setTimeout(() => {\n                    history.go(0)\n                }, 2000)\n                SetShowCourseTypeModel(false);\n            }\n            if (!UpdateCourseTypeData.data) {\n                swal(\"Error!\", \"Server Error Occurred, Please Try Again!\", \"error\");\n                SetShowCourseTypeModel(false);\n            }\n        } catch (error) {\n            swal(\"Error!\", \"Some Error Occurred, Please Try Again!\", \"error\");\n            SetShowCourseTypeModel(false);\n        }\n    }\n\n    return (\n        <Fragment>\n            <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n                {(popupState) => (\n                    <React.Fragment>\n                        <Link className=\"link_mini\" {...bindTrigger(popupState)}>...\n                    </Link>\n                        <Menu {...bindMenu(popupState)}>\n                            <MenuItem onClick={() => {\n                                popupState.close()\n                                if (props.edit === \"Send Feedback Notification\") {\n                                    SetShowFeedbackModel(true)\n                                }\n                                if (props.edit === \"Send Report Notification\") {\n                                    SetShowReportModel(true);\n                                }\n                                if (props.edit === \"Edit Course Category\") {\n                                    SetShowCourseCategoryModel(true);\n                                }\n                                if (props.edit === \"Edit Course Type\") {\n                                    SetShowCourseTypeModel(true);\n                                }\n                            }}>{props.edit}</MenuItem>\n                            <MenuItem onClick={() => {\n                                popupState.close()\n                                if (props.data === \"Delete Feedback\") {\n                                    DeleteFeedback();\n                                }\n                                if (props.data === \"Delete Report\") {\n                                    DeleteReport();\n                                }\n                                if (props.data === \"Delete Course Category\") {\n                                    DeleteCourseCategory();\n                                }\n                                if (props.data === \"Delete Course Type\") {\n                                    DeleteCourseType();\n                                }\n                            }}>{props.data}</MenuItem>\n                        </Menu>\n                    </React.Fragment>\n                )}\n            </PopupState>\n\n\n            {/* Modal For Sending Report Notification */}\n            <Modal show={ShowReportModel} onHide={() => {\n                SetShowReportModel(false)\n            }}>\n                <Modal.Header>\n                    <Modal.Title>Report Manage</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <h4>Comming Soon...</h4>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button onClick={() => {\n                        SetShowReportModel(false)\n                    }}>\n                        Close\n                    </button>\n                    <button onClick={SendReportNotification}>\n                        Send Notification\n                    </button>\n                </Modal.Footer>\n            </Modal>\n\n            {/* Modal For Sending Feedback Notification */}\n            <Modal show={ShowFeedbackModel} onHide={() => {\n                SetShowFeedbackModel(false)\n            }}>\n                <Modal.Header>\n                    <Modal.Title>Feedback Manage</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <h4>Comming Soon...</h4>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button onClick={() => {\n                        SetShowFeedbackModel(false)\n                    }}>\n                        Close\n                    </button>\n                    <button onClick={SendFeedbackNotification}>\n                        Send Notification\n                    </button>\n                </Modal.Footer>\n            </Modal>\n\n            {/* Modal For Editing Course Category Data */}\n            <Modal show={ShowCourseCategoryModel} onHide={() => {\n                SetShowCourseCategoryModel(false)\n                SetUpdateCourseBranches(props.coursebranches);\n                SetUpdateCourseSemesters(props.coursesemesters);\n                SetUpdateCourseName(props.coursename);\n            }}>\n                <Modal.Header>\n                    <Modal.Title>Edit Course Category</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Course Name</Form.Label>\n                            <Form.Control style={{ borderColor: 'black' }} type=\"text\" value={UpdateCourseName} onChange={(e) => SetUpdateCourseName(e.target.value)} placeholder=\"Enter Course Name\" />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Course Branches</Form.Label>\n                            <MultipleValueTextInput\n                                style={{ height: '2.2rem' }}\n                                type=\"text\"\n                                onItemAdded={(item, allItems) => {\n                                    SetUpdateCourseBranches(allItems);\n                                }}\n                                onItemDeleted={(item, allItems) => {\n                                    UpdateCourseBranches.pop(item);\n                                }}\n                                name=\"item-input\"\n                                values={UpdateCourseBranches}\n                                placeholder=\"Enter Course Branches, Separate With COMMA or ENTER.\"\n                            />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Course Semesters</Form.Label>\n                            <MultipleValueTextInput\n                                style={{ height: '2.2rem' }}\n                                type=\"number\"\n                                onItemAdded={(item, allItems) => {\n                                    SetUpdateCourseSemesters(allItems)\n                                }}\n                                onItemDeleted={(item, allItems) => {\n                                    UpdateCourseSemesters.pop(item)\n                                }}\n                                name=\"item-input\"\n                                values={UpdateCourseSemesters}\n                                placeholder=\"Enter Course Semesters, Separate With COMMA or ENTER.\"\n                            />\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button onClick={() => {\n                        SetShowCourseCategoryModel(false)\n                        SetUpdateCourseBranches(props.coursebranches);\n                        SetUpdateCourseSemesters(props.coursesemesters);\n                        SetUpdateCourseName(props.coursename);\n                    }}>\n                        Close\n                    </button>\n                    <button onClick={UpdateCourseCategory}>\n                        Update Course Category\n                    </button>\n                </Modal.Footer>\n            </Modal>\n\n            {/* Modal For Editing Course Type Data */}\n            <Modal show={ShowCourseTypeModel} onHide={() => {\n                SetShowCourseTypeModel(false)\n                SetUpdateCourseTypeName('')\n                SetUpdateCourseTypeImgUrl('')\n                SetUpdateCourseTypeDescription('')\n            }}>\n                <Modal.Header>\n                    <Modal.Title>Edit Course Type</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Course Type Name</Form.Label>\n                            <Form.Control type=\"text\" value={UpdateCourseTypeName} onChange={(e) => SetUpdateCourseTypeName(e.target.value)} placeholder=\"Enter Course Type Name\" />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Course Type Image Url</Form.Label>\n                            <Form.Control type=\"text\" value={UpdateCourseTypeImgUrl} onChange={(e) => SetUpdateCourseTypeImgUrl(e.target.value)} placeholder=\"Enter Course Type Image Url\" />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Course Type Description</Form.Label>\n                            <Form.Control as=\"textarea\" type=\"text\" value={UpdateCourseTypeDescription} onChange={(e) => SetUpdateCourseTypeDescription(e.target.value)} placeholder=\"Enter Course Type Description\" />\n                        </Form.Group>\n                    </Form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <button onClick={() => {\n                        SetShowCourseTypeModel(false)\n                        SetUpdateCourseTypeName('')\n                        SetUpdateCourseTypeImgUrl('')\n                        SetUpdateCourseTypeDescription('')\n                    }}>\n                        Close\n                    </button>\n                    <button onClick={UpdateCourseType}>\n                        Update Course Type\n                    </button>\n                </Modal.Footer>\n            </Modal>\n\n\n\n        </Fragment>\n    );\n}\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Card, Table } from 'react-bootstrap'\nimport Loader from \"react-loader-spinner\";\nimport MiniMenu from './MiniMenu';\nimport SideMenuBar from \"./SideMenuBar\";\nimport Cookies from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport swal from 'sweetalert';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst Reports = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    const [Loading, SetLoading] = useState(false);\n    const [Report, SetReport] = useState([])\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                SetLoading(false)\n                const ReportsData = await axios.get(`${REACT_APP_API_URL}/reports`)\n                SetReport(ReportsData.data, SetLoading(true))\n            } catch (e) {\n                swal(\"Error\", \"Some Error Occurred\", 'error');\n            }\n        }\n        fetchData();\n    }, [])\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <div className=\"subjects_area\">\n                <div className=\"subjects_fdiv\">\n                    <Card className=\"subjects_fcard\">\n                        <Card.Body>\n                            <h1>Reports Management</h1>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"subject_sdiv\">\n                    <Card className=\"subjects_scard\">\n                        <Card.Body>\n                            <hr />\n                            {/* Loader Before Api Call */}\n                            {!Loading && <div className=\"preloader\">\n                                <Loader\n                                    type=\"Hearts\"\n                                    color=\"#202b58\"\n                                    height={60}\n                                    width={60}\n                                />\n                            </div>}\n                            {/* Reports Details Table */}\n                            <Table striped bordered hover size=\"md\" responsive>\n\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>###</th>\n                                        <th>Title</th>\n                                        <th>Student Name</th>\n                                        <th>Student Email</th>\n                                        <th>Message</th>\n                                        <th>Report Status</th>\n                                        <th>Report Date</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n\n                                    {\n                                        Report.map((value, index) => {\n                                            return (\n                                                <tr>\n                                                    <td key={index} >{index + 1}</td>\n                                                    <td><MiniMenu edit=\"Send Report Notification\" reportid={value._id} data=\"Delete Report\" /></td>\n                                                    <td>{value.Report_Title}</td>\n                                                    <td>{value.Report_StudentName}</td>\n                                                    <td>{value.Report_StudentEmail}</td>\n                                                    <td>{value.Report_Message}</td>\n                                                    <td>{value.Report_Status}</td>\n                                                    <td>{value.Report_Date}</td>\n                                                </tr>\n                                            );\n                                        })\n                                    }\n                                </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        </Fragment >\n    );\n}\n\nexport default React.memo(Reports);","import React, { Fragment, useState } from \"react\";\nimport { Container, Form, Row, Card } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useHistory, Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport Loader from 'react-loader-spinner';\nimport Cookies from \"js-cookie\";\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst Login = () => {\n\n    const history = useHistory();\n    const [Loading, SetLoading] = useState(true);\n    const [Admin, SetAdmin] = useState({\n        email_address: \"\",\n        password: \"\"\n    })\n\n    const url = `${REACT_APP_API_URL}/admin/login`\n\n    const submit = async (e) => {\n        e.preventDefault();\n        SetLoading(false);\n        try {\n            const CheckAdmin = await axios.post(url, {\n                email_address: Admin.email_address,\n                password: Admin.password\n            })\n            const adminExist = await CheckAdmin.data\n            if (adminExist.Login) {\n                let experiydate = new Date();\n                experiydate.setTime(experiydate.getTime() + 86400000);\n                Cookies.set(\"jwtadmin\", adminExist.Token, {\n                    path: \"/\",\n                    expires: experiydate\n                });\n                Cookies.set(\"Login\", true, {\n                    path: \"/\",\n                    expires: experiydate\n                });\n                SetLoading(true);\n                history.push(`/admindashboard`)\n            } else {\n                swal(\"Invalid Details\", \"Please Enter the Correct Email Id And Password\", 'error');\n            }\n        } catch (error) {\n            swal(\"Error\", \"Some Error Occurred\", 'error');\n        }\n    }\n\n    const AdminExist = async (e) => {\n        const AdminData = { ...Admin }\n        AdminData[e.target.id] = e.target.value\n        await SetAdmin(AdminData);\n    }\n\n    return (\n        <Fragment>\n            <Container className=\"login_container\" fluid>\n                <Row className=\"login_area\">\n                    <Card>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <h1>Enrollge</h1>\n                            <Card.Text>Please Login To Continue</Card.Text>\n                        </Card.Body>\n                        <Form onSubmit={(e) => submit(e)} style={{ padding: \"1.6rem\" }}>\n                            <Form.Group>\n                                <Form.Label>Email address</Form.Label>\n                                <Form.Control type=\"email\" required={true} onChange={(e) => AdminExist(e)} id=\"email_address\" value={Admin.email_address} placeholder=\"Enter email\" />\n                                <Form.Text className=\"text-muted\">\n                                    We'll never share your email with anyone else.\n                             </Form.Text>\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" required={true} onChange={(e) => AdminExist(e)} id=\"password\" value={Admin.password} placeholder=\"Password\" />\n                            </Form.Group>\n                            {!Loading && <div style={{ textAlign: \"center\" }} >\n                                <Loader\n                                    type=\"Circles\"\n                                    color=\"#202b58\"\n                                    height={30}\n                                    width={30}\n                                />\n                            </div>}\n                            <div className=\"text-center mt-4 mb-2\">\n                                <button type=\"submit\">\n                                    Login\n                                </button>\n                            </div>\n                        </Form>\n                    </Card>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}\n\n\nexport default React.memo(Login);\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\n\n\nconst { REACT_APP_API_URL } = process.env;\n\nexport default function MenuPopupState(props) {\n\n    const history = useHistory();\n\n    //  For Adding Courses And Topics\n    const AddTopic = () => {\n        try {\n            history.push({\n                pathname: `/addcoursetopic/${props.courseid}`\n            })\n        } catch (error) {\n            swal(\"Oops!\", \"Some Error Occur!\", \"error\");\n        }\n    }\n\n    //  For Editing Courses And Topics\n    const EditCourse = async () => {\n        try {\n            history.push({\n                pathname: `/editcourse/${props.courseid}/${props.coursename}/${props.courseorder}/${props.coursetype}/${props.coursedescription}`,\n                state: {\n                    coursethumburl: `${props.coursethumburl}`,\n                    coursetypethumburl: `${props.coursetypethumburl}`\n                }\n            })\n        } catch (error) {\n            swal(\"Oops!\", \"Some Error Occur!\", \"error\");\n        }\n    }\n    const EditTopic = () => {\n        try {\n            history.push({\n                pathname: `/editcoursetopic/${props.courseid}/${props.coursetopicid}/${props.coursetopicname}/${props.coursetopicorder}/${props.coursetopicdescription}`,\n                state: {\n                    coursetopicthumburl: `${props.coursetopicthumburl}`,\n                    coursetopicurl: `${props.coursetopicurl}`,\n                    coursetopicsource: `${props.coursetopicsource}`\n                }\n            })\n        } catch (error) {\n            swal(\"Oops!\", \"Some Error Occur!\", \"error\");\n        }\n    }\n\n    //  For Delete Courses And Topics\n    const DeleteCourse = async () => {\n        try {\n            const courseurl = `${REACT_APP_API_URL}/courses/${props.courseid}`\n            const DeleteCourseData = await axios.delete(courseurl);\n            if (DeleteCourseData.data) {\n                swal(\"Deleted!\", \"Subject is Successfully Deleted!\", \"success\");\n            }\n            setTimeout(() => {\n                history.go(0)\n            }, 2000)\n\n        } catch (e) {\n            swal(\"Error!\", \"Subject is not Deleted!\", \"error\");\n        }\n    }\n    const DeleteTopic = async () => {\n        try {\n            const coursetopicurl = `${REACT_APP_API_URL}/courses/topics/${props.courseid}/${props.coursetopicid}`\n            const DeleteCourseTopicData = await axios.delete(coursetopicurl);\n            if (DeleteCourseTopicData.data) {\n                swal(\"Deleted!\", \"Topic is Successfully Deleted!\", \"success\");\n            }\n            setTimeout(() => {\n                history.go(0)\n            }, 2000)\n\n        } catch (e) {\n            swal(\"Error!\", \"Topic is not Deleted!\", \"error\");\n        }\n    }\n\n    return (\n        <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n            {(popupState) => (\n                <React.Fragment>\n                    <Link className=\"link_mini\" {...bindTrigger(popupState)}>...\n                    </Link>\n                    <Menu {...bindMenu(popupState)}>\n                        <MenuItem onClick={() => {\n                            popupState.close()\n                            if (props.adddata === \"Add Topic\") {\n                                AddTopic();\n                            }\n\n                        }}>{props.adddata}</MenuItem>\n                        <MenuItem onClick={() => {\n                            popupState.close()\n                            if (props.editdata === \"Edit Course\") {\n                                EditCourse();\n                            }\n                            if (props.editdata === \"Edit Topic\") {\n                                EditTopic();\n                            }\n                        }}>{props.editdata}</MenuItem>\n                        <MenuItem onClick={() => {\n                            popupState.close()\n                            if (props.deletedata === \"Delete Course\") {\n                                DeleteCourse();\n                            }\n\n                            if (props.deletedata === \"Delete Topic\") {\n                                DeleteTopic();\n                            }\n                        }}>{props.deletedata}</MenuItem>\n                    </Menu>\n                </React.Fragment>\n            )}\n        </PopupState>\n    );\n}\n","import axios from 'axios';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Card, Image, Table, InputGroup, FormControl } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport CoursesLongMenu from './CoursesLongMenu';\nimport Loader from \"react-loader-spinner\";\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\nimport Cookies from \"js-cookie\";\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst CoursesManagement = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    const [Loading, SetLoading] = useState(false);\n    const [Courses, SetCourses] = useState([])\n    const [Search, SetSearch] = useState()\n    const [SearchData, SetSearchData] = useState([]) // This Data is Used For Map Function And Showing Purpose\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                SetLoading(false);\n                const url = `${REACT_APP_API_URL}/courses`\n                const CoursesInfo = await axios.get(url);\n                SetCourses(CoursesInfo.data);\n                SetSearchData(CoursesInfo.data, SetLoading(true))\n            }\n            catch (error) {\n                swal(\"Error\", \"Some Error Occurred\", 'error');\n            }\n        }\n        fetchData();\n    }, []);\n\n    const handleChange = (value) => {\n        SetSearch(value);\n        filterData(value);\n    }\n\n    const filterData = (value) => {\n        const lowerCasedValue = value.toLowerCase().trim();\n        if (lowerCasedValue === \"\") {\n            SetSearchData(Courses)\n        } else {\n            const filteredData = SearchData.filter((item) => {\n                return Object.keys(item).some(key =>\n                    item[key].toString().toLowerCase().includes(lowerCasedValue)\n                );\n            });\n            SetSearchData(filteredData);\n        }\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <div className=\"subjects_area\">\n                <div className=\"subjects_fdiv\">\n                    <Card className=\"subjects_fcard\">\n                        <Card.Body>\n                            <h1>Courses Management</h1>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"subject_sdiv\">\n                    <Card className=\"subjects_scard\">\n                        <Card.Body>\n                            {/* Search Area Tab */}\n                            <div className=\"subjects_search\">\n                                <div>\n                                    <button className=\"main_btn\" onClick={() => {\n                                        history.push('/addcourse')\n                                    }}>Add Course</button>\n                                </div>\n                                <div>\n                                    <InputGroup className=\"mb-2 input-area\">\n                                        <FormControl\n                                            className=\"mr-5\"\n                                            placeholder=\"Search Course\"\n                                            value={Search}\n                                            onChange={(e) => handleChange(e.target.value)}\n                                        />\n                                    </InputGroup>\n\n                                </div>\n                            </div>\n                            <hr />\n                            {/* Loader Before Api Call */}\n                            {!Loading && <div className=\"preloader\">\n                                <Loader\n                                    type=\"Hearts\"\n                                    color=\"#202b58\"\n                                    height={60}\n                                    width={60}\n                                />\n                            </div>}\n                            {/* Courses Details Table */}\n                            <Table striped bordered hover size=\"md\" responsive>\n\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>###</th>\n                                        <th>Thumbnail</th>\n                                        <th>Type Of Course </th>\n                                        <th>Course Name</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        SearchData.map((value, index) => {\n                                            return (\n                                                <>\n                                                    <tr>\n                                                        <td key={index} >{index + 1}</td>\n                                                        <td><CoursesLongMenu courseid={value._id} coursename={value.Courses_Name} coursethumburl={value.Courses_ImgUrl} coursetype={value.Courses_Type} coursedescription={value.Courses_Description} courseorder={value.Courses_Order} deletedata=\"Delete Course\" adddata=\"Add Topic\" editdata=\"Edit Course\" /></td>\n                                                        <td><Image id=\"thumb-img\" src={value.Courses_ImgUrl} thumbnail /></td>\n                                                        <td>{value.Courses_Type}</td>\n                                                        <td>{value.Courses_Name}</td>\n                                                    </tr>\n                                                </>\n                                            );\n                                        })\n                                    }\n                                </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default React.memo(CoursesManagement);","import axios from 'axios';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Card, Container, Form, Col } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\nimport Cookies from \"js-cookie\";\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst AddCourses = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    const [Course, SetCourse] = useState({\n        Course_Name: \"\",\n        Course_Order: \"\",\n        Course_Type: \"\",\n        Course_ImgUrl: \"\",\n        Course_Description: \"\"\n    })\n\n    const [CourseTypes, SetCourseTypes] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const url = `${REACT_APP_API_URL}/coursestypes`\n                const GetCourseTypes = await axios.get(url)\n                const CourseTypesData = GetCourseTypes.data\n                SetCourseTypes(CourseTypesData);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n        fetchData();\n    }, [])\n\n    const seturl = `${REACT_APP_API_URL}/courses`\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const AddCourseData = await axios.post(seturl, {\n                Courses_Name: Course.Course_Name,\n                Courses_Order: Course.Course_Order,\n                Courses_Type: Course.Course_Type,\n                Courses_ImgUrl: Course.Course_ImgUrl,\n                Courses_Description: Course.Course_Description\n            })\n            if (AddCourseData.data) {\n                swal(\"Added!\", \"Course is Successfully Added!\", \"success\");\n            }\n            if (!AddCourseData.data) {\n                swal(\"Not Added!\", \"Server Error Occurred!\", \"error\");\n            }\n        } catch (error) {\n            swal(\"Not Added!\", \"Some Error Occurred!\", \"error\");\n        }\n    }\n\n    const addCourse = async (e) => {\n        // Here First Create an Object of CourseData and attach with Course State and Then fill values with Object Data with Target Values and then Set it On State.\n        const Coursedata = { ...Course }\n        Coursedata[e.target.id] = await e.target.value\n        await SetCourse(Coursedata);\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Course</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"aaddsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push('/managecourses')\n                                        }} >\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Course Details</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => submit(e)} >\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\" >\n                                                    <Form.Label>Course Name</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Course_Name\" required={true} onChange={(e) => addCourse(e)} value={Course.Course_Name} placeholder=\"Enter Course Name\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\" >\n                                                    <Form.Label>Course Order</Form.Label>\n                                                    <Form.Control type=\"number\" min=\"0\" id=\"Course_Order\" required={true} onChange={(e) => addCourse(e)} value={Course.Course_Order} placeholder=\"Enter Course Order\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\" >\n                                                    <Form.Label>Course Type</Form.Label>\n                                                    <Form.Control as=\"select\" type=\"text\" id=\"Course_Type\" required={true} onChange={(e) => addCourse(e)} value={Course.Course_Type} placeholder=\"Select Course Type\" >\n                                                        <option value=\"\">Select Course Type</option>\n                                                        {\n                                                            CourseTypes.map((value, index) => {\n                                                                return (\n                                                                    <option value={value.Course_Type} key={index}>{value.Course_Type}</option>\n                                                                );\n                                                            })\n                                                        }\n                                                    </Form.Control>\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\" >\n                                                    <Form.Label>Course Thumbnail Url</Form.Label>\n                                                    <Form.Control type=\"text\" id=\"Course_ImgUrl\" required={true} onChange={(e) => addCourse(e)} value={Course.Course_ImgUrl} placeholder=\"Enter Course Thumbnail Url\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Group>\n                                                <Form.Label>Course Description</Form.Label>\n                                                <Form.Control type=\"text\" as=\"textarea\" id=\"Course_Description\" required={true} onChange={(e) => addCourse(e)} value={Course.Course_Description} placeholder=\"Enter Course Description\" />\n                                            </Form.Group>\n\n                                            <button type=\"submit\">\n                                                Add Course\n                                            </button>\n\n                                        </Form>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(AddCourses);","import axios from 'axios';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Container, Form, Card, Col, Table, Image } from 'react-bootstrap';\nimport { useParams, useHistory } from 'react-router-dom';\nimport CoursesLongMenu from \"./CoursesLongMenu\";\nimport swal from 'sweetalert';\nimport Loader from 'react-loader-spinner';\nimport SideMenuBar from '../SideMenuBar';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst AddCourseTopics = (props) => {\n\n    // Here We Need to Three Props Object id of subject and chapter . Chapter Order\n\n    const { courseid } = useParams();\n\n    const history = useHistory();\n\n    const [Loading, SetLoading] = useState(false);\n\n    const [CourseTopics, SetCourseTopics] = useState({\n        Course_TopicName: \"\",\n        Course_TopicOrder: \"\",\n        Course_TopicDescription: \"\",\n        Course_TopicUrl: \"\",\n        Course_TopicSource: \"\",\n        Course_TopicImgUrl: \"\"\n    });\n\n    const [CourseTopicsData, SetCourseTopicsData] = useState([]);\n\n    const seturl = `${REACT_APP_API_URL}/courses/topics/${courseid}`\n\n    const showurl = `${REACT_APP_API_URL}/courses/${courseid}`\n\n    useEffect(() => {\n        try {\n            SetLoading(false);\n            const fetchData = async () => {\n                const GetCourseTopics = await axios.get(showurl)\n                const CourseTopicData = await GetCourseTopics.data.Courses_Topics\n                SetCourseTopicsData(CourseTopicData, SetLoading(true));\n            }\n            fetchData();\n        } catch (error) {\n            swal(\"Error\", \"Some Error Occurred\", 'error');\n        }\n    }, [])\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const AddCourseTopic = await axios.put(seturl, {\n                Courses_TopicName: CourseTopics.Course_TopicName,\n                Courses_TopicOrder: CourseTopics.Course_TopicOrder,\n                Courses_TopicDescription: CourseTopics.Course_TopicDescription,\n                Courses_TopicUrl: CourseTopics.Course_TopicUrl,\n                Courses_TopicSource: CourseTopics.Course_TopicSource,\n                Courses_TopicImgUrl: CourseTopics.Course_TopicImgUrl\n            });\n            if (AddCourseTopic.data) {\n                swal(\"Added!\", \"Topic of Course is Successfully Added!\", \"success\");\n            }\n            setTimeout(() => {\n                history.go(0)\n            }, 2000)\n        } catch (error) {\n            swal(\"Error!\", \"Topic of Course is not Added!\", \"error\");\n        }\n    }\n\n\n    const addCourseTopic = async (e) => {\n        const CourseTopicData = { ...CourseTopics }\n        CourseTopicData[e.target.id] = e.target.value;\n        SetCourseTopics(CourseTopicData);\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Topics of Course</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"addsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push(`/managecourses`)\n                                        }}>\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Topic Details of Course</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => submit(e)}>\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\" >\n                                                    <Form.Label>Topic Name of Course</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} onChange={(e) => addCourseTopic(e)} id=\"Course_TopicName\" value={CourseTopics.Course_TopicName} placeholder=\"Enter Topic Name of Course\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\" >\n                                                    <Form.Label>Topic Order of Course</Form.Label>\n                                                    <Form.Control type=\"number\" required={true} min=\"0\" onChange={(e) => addCourseTopic(e)} id=\"Course_TopicOrder\" value={CourseTopics.Course_TopicOrder} placeholder=\"0 to 999\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Group>\n                                                <Form.Label>Topic Source of Course</Form.Label>\n                                                <Form.Control as={'select'} onChange={(e) => addCourseTopic(e)} id=\"Course_TopicSource\" required={true} value={CourseTopics.Course_TopicSource} type=\"text\" placeholder=\"Select Topic Source\" >\n                                                    <option value=\"\" >Select Topic Source</option>\n                                                    <option value=\"Mp4/Mkv From Url\">Mp4/Mkv From Url</option>\n                                                    <option value=\"Youtube\">Youtube</option>\n                                                    <option value=\"Embed Url\">Embed Url</option>\n                                                </Form.Control>\n                                            </Form.Group>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\" >\n                                                    <Form.Label>Topic Video Url of Course</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} onChange={(e) => addCourseTopic(e)} id=\"Course_TopicUrl\" value={CourseTopics.Course_TopicUrl} placeholder=\"Enter Topic Video Url of Course\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Topic Thumbnail Url of Course</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} onChange={(e) => addCourseTopic(e)} id=\"Course_TopicImgUrl\" value={CourseTopics.Course_TopicImgUrl} placeholder=\"Enter Topic Thumbnail Url of Course\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Group>\n                                                <Form.Label>Topic Desciption of Course</Form.Label>\n                                                <Form.Control as=\"textarea\" onChange={(e) => addCourseTopic(e)} id=\"Course_TopicDescription\" value={CourseTopics.Course_TopicDescription} type=\"text\" placeholder=\"Enter Topic Description of Course\" />\n                                            </Form.Group>\n\n\n                                            <button type=\"submit\">\n                                                Add Topic of Course\n                                            </button>\n\n                                        </Form>\n                                    </div>\n                                    <br />\n                                    <hr />\n                                    <br />\n\n                                    {/* Topics Details of Course */}\n\n                                    <div>\n                                        <div>\n                                            <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                                <text style={{ color: 'white' }}>All Topics of Course</text>\n                                            </Card>\n                                        </div>\n                                        <hr />\n                                        {/* Loader Before Api Call */}\n                                        {!Loading && <div className=\"preloader\">\n                                            <Loader\n                                                type=\"Hearts\"\n                                                color=\"#202b58\"\n                                                height={60}\n                                                width={60}\n                                            />\n                                        </div>}\n                                        <Table striped bordered hover size=\"md\" responsive>\n                                            <thead>\n                                                <tr>\n                                                    <th>S.No</th>\n                                                    <th>###</th>\n                                                    <th>Thumbnail</th>\n                                                    <th>Name</th>\n                                                    <th>\n                                                        Video Url\n                                                    </th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    CourseTopicsData.map((value, i) => {\n                                                        return (\n                                                            <tr>\n                                                                <td key={i}>{i + 1}</td>\n                                                                <td>\n                                                                    <CoursesLongMenu coursetopicindex={i} coursetopicname={value.Courses_TopicName} courseid={courseid} coursetopicsource={value.Courses_TopicSource} coursetopicorder={value.Courses_TopicOrder} coursetopicdescription={value.Courses_TopicDescription} coursetopicurl={value.Courses_TopicUrl} coursetopicthumburl={value.Courses_TopicImgUrl} coursetopicid={value._id} deletedata=\"Delete Topic\" editdata=\"Edit Topic\" />\n                                                                </td>\n                                                                <td><Image style={{ height: '5rem', width: '5rem' }} src={value.Courses_TopicImgUrl} thumbnail /></td>\n                                                                <td>{value.Courses_TopicName}</td>\n                                                                <td>{value.Courses_TopicUrl}</td>\n                                                            </tr>\n                                                        );\n                                                    })\n                                                }\n                                            </tbody>\n                                        </Table>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(AddCourseTopics);","import axios from 'axios';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Card, Container, Form, Col } from 'react-bootstrap';\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\n\nconst { REACT_APP_API_URL } = process.env;\n\n\nconst EditCourses = () => {\n\n    const { courseid, coursename, courseorder, coursetype, coursedescription } = useParams();\n\n    const history = useHistory();\n\n    const location = useLocation();\n\n    const [Course, SetCourse] = useState({\n        Course_Name: coursename,\n        Course_Order: courseorder,\n        Course_Type: coursetype,\n        Course_ImgUrl: location.state.coursethumburl,\n        Course_Description: coursedescription\n    });\n\n    const [CourseTypes, SetCourseTypes] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const url = `${REACT_APP_API_URL}/coursestypes`\n                const GetCourseTypes = await axios.get(url)\n                const CourseTypesData = GetCourseTypes.data\n                SetCourseTypes(CourseTypesData);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n        fetchData();\n    }, [])\n\n\n    const seturl = `${REACT_APP_API_URL}/courses/${courseid}`\n\n    const updateCourse = async (e) => {\n        e.preventDefault();\n        try {\n            const UpdateCourseData = await axios.patch(seturl, {\n                Courses_Name: Course.Course_Name,\n                Courses_Order: Course.Course_Order,\n                Courses_Type: Course.Course_Type,\n                Courses_TypeImgUrl: Course.Course_TypeImgUrl,\n                Courses_ImgUrl: Course.Course_ImgUrl,\n                Courses_Description: Course.Course_Description\n            })\n            if (UpdateCourseData.data) {\n                swal(\"Updated!\", \"Course is Successfully Updated!\", \"success\");\n            }\n        } catch (error) {\n            swal(\"Not Updated!\", \"Course is Not Updated!\", \"error\");\n        }\n    }\n\n    const updateCourseData = async (e) => {\n        // Here First Create an Object of CourseData and attach with Course State and Then fill values with Object Data with Target Values and then Set it On State.\n        const Coursedata = { ...Course }\n        Coursedata[e.target.id] = await e.target.value\n        await SetCourse(Coursedata);\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Course</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"aaddsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push('/managecourses')\n                                        }} >\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Course Details</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => updateCourse(e)} >\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\" >\n                                                    <Form.Label>Course Name</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} id=\"Course_Name\" onChange={(e) => updateCourseData(e)} value={Course.Course_Name} placeholder=\"Enter Course Name\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\" >\n                                                    <Form.Label>Course Order</Form.Label>\n                                                    <Form.Control type=\"number\" required={true} min=\"0\" id=\"Course_Order\" onChange={(e) => updateCourseData(e)} value={Course.Course_Order} placeholder=\"Enter Course Order\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\" >\n                                                    <Form.Label>Course Type</Form.Label>\n                                                    <Form.Control as='select' type=\"text\" required={true} id=\"Course_Type\" onChange={(e) => updateCourseData(e)} value={Course.Course_Type} placeholder=\"Select Course Type\" >\n                                                        {\n                                                            CourseTypes.map((value, index) => {\n                                                                return (\n                                                                    <option key={index}>{value.Course_Type}</option>\n                                                                );\n                                                            })\n                                                        }\n                                                    </Form.Control>\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\" >\n                                                    <Form.Label>Course Thumbnail Url</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} id=\"Course_ImgUrl\" onChange={(e) => updateCourseData(e)} value={Course.Course_ImgUrl} placeholder=\"Enter Course Thumbnail Url\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Group>\n                                                <Form.Label>Course Description</Form.Label>\n                                                <Form.Control type=\"text\" as=\"textarea\" id=\"Course_Description\" onChange={(e) => updateCourseData(e)} value={Course.Course_Description} placeholder=\"Enter Course Description\" required />\n                                            </Form.Group>\n\n                                            <button type=\"submit\">\n                                                Update Course\n                                            </button>\n\n                                        </Form>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(EditCourses);","import axios from 'axios';\nimport React, { Fragment, useState } from 'react';\nimport { Container, Form, Card, Col } from 'react-bootstrap';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport SideMenuBar from '../SideMenuBar';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst EditCourseTopic = (props) => {\n\n    // Here We Need to Three Props Object id of subject and chapter . Chapter Order\n\n    const { courseid, coursetopicid, coursetopicname, coursetopicorder, coursetopicdescription } = useParams();\n\n    const location = useLocation();\n\n    const history = useHistory();\n\n    const [CourseTopics, SetCourseTopics] = useState({\n        Course_TopicName: coursetopicname,\n        Course_TopicOrder: coursetopicorder,\n        Course_TopicDescription: coursetopicdescription,\n        Course_TopicUrl: location.state.coursetopicurl,\n        Course_TopicSource: location.state.coursetopicsource,\n        Course_TopicImgUrl: location.state.coursetopicthumburl\n    });\n\n    const seturl = `${REACT_APP_API_URL}/courses/topics/${courseid}/${coursetopicid}`\n\n    const updateCourseTopic = async (e) => {\n        e.preventDefault();\n        try {\n            const updateCourseTopicData = await axios.patch(seturl, {\n                Courses_TopicName: CourseTopics.Course_TopicName,\n                Courses_TopicOrder: CourseTopics.Course_TopicOrder,\n                Courses_TopicDescription: CourseTopics.Course_TopicDescription,\n                Courses_TopicUrl: CourseTopics.Course_TopicUrl,\n                Courses_TopicSource: CourseTopics.Course_TopicSource,\n                Courses_TopicImgUrl: CourseTopics.Course_TopicImgUrl\n            });\n            if (updateCourseTopicData.data) {\n                swal(\"Updated!\", \"Topic of Course is Successfully Updated!\", \"success\");\n            }\n        } catch (error) {\n            swal(\"Error!\", \"Topic of Course is not Updated!\", \"error\");\n        }\n    }\n\n\n    const updateCourseTopics = async (e) => {\n        const CourseTopicData = { ...CourseTopics }\n        CourseTopicData[e.target.id] = e.target.value;\n        SetCourseTopics(CourseTopicData);\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <Container className=\"addsubject_container\" fluid>\n                <div className=\"addsubject-maindiv\">\n                    <div className=\"addsubject_fdiv\">\n                        <Card className=\"addsubject_fcard\">\n                            <Card.Body>\n                                <h3>Add Topics of Course</h3>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"addsubject_sdiv\">\n                        <Card className=\"addsubject_scard\">\n                            <Card.Body>\n                                <div>\n                                    <div>\n                                        <button onClick={() => {\n                                            history.push(`/addcoursetopic/${courseid}`)\n                                        }}>\n                                            Back to List\n                                        </button>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Card style={{ backgroundColor: \"#202b58\", paddingTop: '0.5rem', paddingBottom: '0.3rem', paddingLeft: '0.5rem' }}>\n                                            <text style={{ color: 'white' }}>Add Topic Details of Course</text>\n                                        </Card>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <Form onSubmit={(e) => updateCourseTopic(e)}>\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\" >\n                                                    <Form.Label>Topic Name of Course</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} onChange={(e) => updateCourseTopics(e)} id=\"Course_TopicName\" value={CourseTopics.Course_TopicName} placeholder=\"Enter Topic Name of Course\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\" >\n                                                    <Form.Label>Topic Order of Course</Form.Label>\n                                                    <Form.Control type=\"number\" required={true} min=\"0\" onChange={(e) => updateCourseTopics(e)} id=\"Course_TopicOrder\" value={CourseTopics.Course_TopicOrder} placeholder=\"0 to 999\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Group>\n                                                <Form.Label>Topic Source of Course</Form.Label>\n                                                <Form.Control as=\"select\" onChange={(e) => updateCourseTopics(e)} id=\"Course_TopicSource\" value={CourseTopics.Course_TopicSource} type=\"text\" placeholder=\"Select Topic Source of Course\" >\n                                                    <option>Mp4/Mkv From Url</option>\n                                                    <option>Youtube</option>\n                                                    <option>Embed Url</option>\n                                                </Form.Control>\n                                            </Form.Group>\n\n                                            <Form.Row>\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Topic Video Url of Course</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} onChange={(e) => updateCourseTopics(e)} id=\"Course_TopicUrl\" value={CourseTopics.Course_TopicUrl} placeholder=\"Enter Topic Video Url of Course\" />\n                                                </Form.Group>\n\n                                                <Form.Group as={Col} xs=\"12\" sm=\"6\" md=\"6\" lg=\"6\">\n                                                    <Form.Label>Topic Thumbnail Url of Course</Form.Label>\n                                                    <Form.Control type=\"text\" required={true} onChange={(e) => updateCourseTopics(e)} id=\"Course_TopicImgUrl\" value={CourseTopics.Course_TopicImgUrl} placeholder=\"Enter Topic Thumbnail Url of Course\" />\n                                                </Form.Group>\n                                            </Form.Row>\n\n                                            <Form.Group>\n                                                <Form.Label>Topic Desciption of Course</Form.Label>\n                                                <Form.Control as=\"textarea\" onChange={(e) => updateCourseTopics(e)} id=\"Course_TopicDescription\" value={CourseTopics.Course_TopicDescription} type=\"text\" placeholder=\"Enter Topic Description of Course\" />\n                                            </Form.Group>\n\n\n                                            <button type=\"submit\">\n                                                Update Topic of Course\n                                            </button>\n\n                                        </Form>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </Container>\n        </Fragment>\n    );\n}\n\nexport default React.memo(EditCourseTopic);","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Card, Table } from 'react-bootstrap'\nimport Loader from \"react-loader-spinner\";\nimport MiniMenu from './MiniMenu';\nimport SideMenuBar from \"./SideMenuBar\";\nimport Cookies from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport swal from 'sweetalert';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst Feedback = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    const [Loading, SetLoading] = useState(false);\n    const [Feedbacks, SetFeedbacks] = useState([])\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                SetLoading(false)\n                const FeedbacksData = await axios.get(`${REACT_APP_API_URL}/feedback`)\n                SetFeedbacks(FeedbacksData.data, SetLoading(true))\n            } catch (e) {\n                swal(\"Error\", \"Some Error Occurred\", 'error');\n            }\n        }\n        fetchData();\n    }, [])\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <div className=\"subjects_area\">\n                <div className=\"subjects_fdiv\">\n                    <Card className=\"subjects_fcard\">\n                        <Card.Body>\n                            <h1>Feedback Management</h1>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"subject_sdiv\">\n                    <Card className=\"subjects_scard\">\n                        <Card.Body>\n                            <hr />\n                            {/* Loader Before Api Call */}\n                            {!Loading && <div className=\"preloader\">\n                                <Loader\n                                    type=\"Hearts\"\n                                    color=\"#202b58\"\n                                    height={60}\n                                    width={60}\n                                />\n                            </div>}\n                            {/* Reports Details Table */}\n                            <Table striped bordered hover size=\"md\" responsive>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>###</th>\n                                        <th>Student Name</th>\n                                        <th>Student Email</th>\n                                        <th>Feedback Message</th>\n                                        <th>Feedback Date</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n\n                                    {\n                                        Feedbacks.map((value, index) => {\n                                            return (\n                                                <tr key={index}>\n                                                    <td>{index + 1}</td>\n                                                    <td><MiniMenu edit=\"Send Feedback Notification\" feedbackid={value._id} data=\"Delete Feedback\" /></td>\n                                                    <td>{value.Feedback_StudentName}</td>\n                                                    <td>{value.Feedback_StudentEmail}</td>\n                                                    <td>{value.Feedback_Message}</td>\n                                                    <td>{value.Feedback_Date}</td>\n                                                </tr>\n                                            );\n                                        })\n                                    }\n                                </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        </Fragment >\n    );\n}\n\nexport default React.memo(Feedback);","import React, { Fragment, useEffect, useState, button } from \"react\";\nimport { Card, Table, Modal, Form } from 'react-bootstrap'\nimport Loader from \"react-loader-spinner\";\nimport MiniMenu from '../MiniMenu';\nimport SideMenuBar from \"../SideMenuBar\";\nimport Cookies from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport swal from 'sweetalert';\nimport MultipleValueTextInput from 'react-multivalue-text-input';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst AddCoursesCategories = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    const [Loading, SetLoading] = useState(false);\n    const [CoursesCategories, SetCoursesCategories] = useState([])\n    const [ShowModal, setShowModal] = useState(false);\n    const [Branches, SetBranches] = useState([]);\n    const [Semesters, SetSemesters] = useState([]);\n    const [CourseName, SetCourseName] = useState('');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                SetLoading(false)\n                const CategoriesData = await axios.get(`${REACT_APP_API_URL}/coursescategories`)\n                SetCoursesCategories(CategoriesData.data, SetLoading(true))\n            } catch (e) {\n                swal(\"Error\", \"Some Error Occurred\", 'error');\n            }\n        }\n        fetchData();\n    }, [])\n\n    const AddingCourseCategory = async () => {\n        try {\n            const AddCategory = await axios.post(`${REACT_APP_API_URL}/coursecategory`, {\n                Course_Type: CourseName,\n                Course_Branch: Branches,\n                Course_Semester: Semesters\n            });\n            console.log(AddCategory)\n            if (AddCategory.data) {\n                swal(\"Added!\", \"Courses Categories is Successfully Added!\", \"success\");\n                setTimeout(() => {\n                    history.go(0)\n                }, 2000)\n                setShowModal(false)\n            }\n            if (!AddCategory.data) {\n                swal(\"Error\", \"Server Error Occurred, Please Try Again\", 'error');\n                setShowModal(false)\n            }\n        } catch (error) {\n            swal(\"Error\", \"Some Error Occurred, Please Try Again\", 'error');\n            setShowModal(false)\n        }\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <div className=\"subjects_area\">\n                <div className=\"subjects_fdiv\">\n                    <Card className=\"subjects_fcard\">\n                        <Card.Body>\n                            <h1>Manage Courses Categories</h1>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"subject_sdiv\">\n                    <Card className=\"subjects_scard\">\n                        <Card.Body>\n                            <button onClick={() => setShowModal(true)} >\n                                Add Courses Categories\n                            </button>\n                            <hr />\n                            {/* Loader Before Api Call */}\n                            {!Loading && <div className=\"preloader\">\n                                <Loader\n                                    type=\"Hearts\"\n                                    color=\"#202b58\"\n                                    height={60}\n                                    width={60}\n                                />\n                            </div>}\n                            {/* Reports Details Table */}\n                            <Table striped bordered hover size=\"md\" responsive>\n\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>###</th>\n                                        <th>Course Name</th>\n                                        <th>Course Branches</th>\n                                        <th>Semesters</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n\n                                    {\n                                        CoursesCategories.map((value, index) => {\n                                            return (\n                                                <tr>\n                                                    <td key={index} >{index + 1}</td>\n                                                    <td><MiniMenu coursecategoryid={value._id} coursename={value.Course_Type} coursebranches={value.Course_Branch} coursesemesters={value.Course_Semester} data=\"Delete Course Category\" edit=\"Edit Course Category\" /></td>\n                                                    <td>{value.Course_Type}</td>\n                                                    <td>{\n                                                        value.Course_Branch.map((data, i) => {\n                                                            return (\n                                                                <tr style={{ backgroundColor: 'transparent' }} key={i} >{data}</tr>\n                                                            )\n                                                        })\n                                                    }</td>\n                                                    <td>{\n                                                        value.Course_Semester.map((item, key) => {\n                                                            return (\n                                                                <td key={key}>{item}</td>\n                                                            )\n                                                        })\n                                                    }</td>\n                                                </tr>\n                                            );\n                                        })\n                                    }\n                                </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n\n            {/* Modal For Adding Courses Categories */}\n            <Modal show={ShowModal} onHide={() => {\n                setShowModal(false)\n                SetBranches([])\n                SetSemesters([])\n                SetCourseName(\"\")\n            }}>\n                <Modal.Header>\n                    <Modal.Title>Add Course Category</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Course Name</Form.Label>\n                            <Form.Control style={{ borderColor: 'black' }} type=\"text\" value={CourseName} onChange={(e) => SetCourseName(e.target.value)} placeholder=\"Enter Course Name\" />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Course Branches</Form.Label>\n                            <MultipleValueTextInput\n                                style={{ height: '2.2rem' }}\n                                type=\"text\"\n                                onItemAdded={(item, allItems) => {\n                                    SetBranches(allItems);\n                                }}\n                                onItemDeleted={(item, allItems) => {\n                                    Branches.pop(item);\n                                }}\n                                name=\"item-input\"\n                                placeholder=\"Enter Course Branches, Separate With COMMA or ENTER.\"\n                            />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Course Semesters</Form.Label>\n                            <MultipleValueTextInput\n                                style={{ height: '2.2rem' }}\n                                type=\"number\"\n                                onItemAdded={(item, allItems) => {\n                                    SetSemesters(allItems)\n                                }}\n                                onItemDeleted={(item, allItems) => {\n                                    Semesters.pop(item)\n                                }}\n                                name=\"item-input\"\n                                placeholder=\"Enter Course Semesters, Separate With COMMA or ENTER.\"\n                            />\n                        </Form.Group>\n                    </Form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <button onClick={() => {\n                        setShowModal(false)\n                        SetBranches([])\n                        SetSemesters([])\n                        SetCourseName(\"\")\n                    }}>\n                        Close\n                    </button>\n                    <button onClick={AddingCourseCategory}>\n                        Save Course Category\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        </Fragment >\n    );\n}\n\nexport default React.memo(AddCoursesCategories);","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Card, Table, Modal, Form, Image } from 'react-bootstrap'\nimport Loader from \"react-loader-spinner\";\nimport MiniMenu from '../MiniMenu';\nimport SideMenuBar from \"../SideMenuBar\";\nimport Cookies from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport swal from 'sweetalert';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst AddCoursesTypes = () => {\n\n    const history = useHistory();\n    if (!Cookies.get(\"Login\")) {\n        history.push(\"/login\")\n    }\n\n    const [Loading, SetLoading] = useState(false);\n    const [CoursesTypes, SetCoursesTypes] = useState([])\n    const [ShowModal, setShowModal] = useState(false);\n    const [CourseTypeName, SetCourseTypeName] = useState('');\n    const [CourseTypeDescription, SetCourseTypeDescription] = useState('')\n    const [CourseTypeImgUrl, SetCourseTypeImgUrl] = useState('')\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                SetLoading(false)\n                const CoursesTypesData = await axios.get(`${REACT_APP_API_URL}/coursestypes`)\n                SetCoursesTypes(CoursesTypesData.data, SetLoading(true))\n            } catch (e) {\n                swal(\"Error\", \"Some Error Occurred\", 'error');\n            }\n        }\n        fetchData();\n    }, [])\n\n    const AddingCoursesTypes = async () => {\n        try {\n            const AddCourseType = await axios.post(`${REACT_APP_API_URL}/coursetype`, {\n                Course_Type: CourseTypeName,\n                Course_TypeDescription: CourseTypeDescription,\n                Course_TypeImgUrl: CourseTypeImgUrl\n            });\n            console.log(AddCourseType)\n            if (AddCourseType.data) {\n                swal(\"Added!\", \"Subject Categories is Successfully Added!\", \"success\");\n                setTimeout(() => {\n                    history.go(0)\n                }, 2000)\n                setShowModal(false)\n            }\n            if (!AddCourseType.data) {\n                swal(\"Error\", \"Server Error Occurred, Please Try Again\", 'error');\n                setShowModal(false)\n            }\n        } catch (error) {\n            swal(\"Error\", \"Some Error Occurred, Please Try Again\", 'error');\n            setShowModal(false)\n        }\n    }\n\n    return (\n        <Fragment>\n            <SideMenuBar />\n            <div className=\"subjects_area\">\n                <div className=\"subjects_fdiv\">\n                    <Card className=\"subjects_fcard\">\n                        <Card.Body>\n                            <h1>Manage Courses Types</h1>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"subject_sdiv\">\n                    <Card className=\"subjects_scard\">\n                        <Card.Body>\n                            <button onClick={() => setShowModal(true)} >\n                                Add Courses Types\n                            </button>\n                            <hr />\n                            {/* Loader Before Api Call */}\n                            {!Loading && <div className=\"preloader\">\n                                <Loader\n                                    type=\"Hearts\"\n                                    color=\"#202b58\"\n                                    height={60}\n                                    width={60}\n                                />\n                            </div>}\n                            {/* Reports Details Table */}\n                            <Table striped bordered hover size=\"md\" responsive>\n\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>###</th>\n                                        <th>Course Type Name</th>\n                                        <th>Course Type Description</th>\n                                        <th>Course Type Image</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n\n                                    {\n                                        CoursesTypes.map((value, index) => {\n                                            return (\n                                                <tr>\n                                                    <td key={index} >{index + 1}</td>\n                                                    <td><MiniMenu coursetypesid={value._id} coursetype={value.Course_Type} coursetypedescription={value.Course_TypeDescription} coursetypeimgurl={value.Course_TypeImgUrl} edit=\"Edit Course Type\" data=\"Delete Course Type\" /></td>\n                                                    <td>{value.Course_Type}</td>\n                                                    <td>{value.Course_TypeDescription}</td>\n                                                    <td><Image style={{ height: \"auto\", width: '100%' }} responsive src={value.Course_TypeImgUrl} thumbnail /></td>\n                                                </tr>\n                                            );\n                                        })\n                                    }\n                                </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n\n            {/* Modal For Adding Subject Categories */}\n            <Modal show={ShowModal} onHide={() => {\n                setShowModal(false)\n                SetCourseTypeName('')\n                SetCourseTypeImgUrl('')\n                SetCourseTypeDescription('')\n            }}>\n                <Modal.Header>\n                    <Modal.Title>Add Course Type</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Course Type Name</Form.Label>\n                            <Form.Control type=\"text\" value={CourseTypeName} onChange={(e) => SetCourseTypeName(e.target.value)} placeholder=\"Enter Course Type Name\" />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Course Type Image Url</Form.Label>\n                            <Form.Control type=\"text\" value={CourseTypeImgUrl} onChange={(e) => SetCourseTypeImgUrl(e.target.value)} placeholder=\"Enter Course Type Image Url\" />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Course Type Description</Form.Label>\n                            <Form.Control as=\"textarea\" type=\"text\" value={CourseTypeDescription} onChange={(e) => SetCourseTypeDescription(e.target.value)} placeholder=\"Enter Course Type Description\" />\n                        </Form.Group>\n                    </Form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <button onClick={() => {\n                        setShowModal(false)\n                        SetCourseTypeName('')\n                        SetCourseTypeImgUrl('')\n                        SetCourseTypeDescription('')\n                    }}>\n                        Close\n                    </button>\n                    <button onClick={AddingCoursesTypes}>\n                        Save Course Type\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        </Fragment >\n    );\n}\n\nexport default React.memo(AddCoursesTypes);","import React from 'react'\n\nfunction NotFound() {\n  return (\n    <div className=\"text-center notfound\" >\n      <h1 style={{ color: 'white', fontSize: 100 }} >404</h1>\n      <paragraph style={{ color: 'white', fontSize: 60 }} >Page Not Found</paragraph>\n    </div>\n  )\n}\n\nexport default NotFound\n","import React from 'react';\nimport './App.css';\nimport { HashRouter, Redirect, Route } from 'react-router-dom';\nimport AddTopics from './Components/Subjects Managements/AddTopics';\nimport AddChapters from './Components/Subjects Managements/AddChapters';\nimport AddSubjects from './Components/Subjects Managements/AddSubjects';\nimport SubjectsManagement from \"./Components/Subjects Managements/SubjectsManagement\";\nimport EditSubject from './Components/Subjects Managements/EditSubject';\nimport EditChapter from './Components/Subjects Managements/EditChapter';\nimport EditTopic from './Components/Subjects Managements/EditTopic';\nimport AdminDashboard from './Components/AdminDashboard';\nimport Settings from './Components/Settings';\nimport Reports from './Components/Reports';\nimport Login from './Components/Login';\n// import Register from './Components/Register';\nimport CoursesManagement from './Components/Courses Managements/CoursesManagement';\nimport AddCourses from './Components/Courses Managements/AddCourses';\nimport AddCourseTopics from './Components/Courses Managements/AddCourseTopics';\nimport EditCourse from './Components/Courses Managements/EditCourse';\nimport EditCourseTopic from './Components/Courses Managements/EditCourseTopic';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Cookies from \"js-cookie\";\nimport Feedback from './Components/Feedback';\nimport AddCoursesCategories from './Components/Subjects Managements/AddCoursesCategories';\nimport AddCoursesTypes from './Components/Courses Managements/AddCoursesTypes';\nimport NotFound from './Components/NotFound';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Route exact path=\"/\" render={() => (\n        Cookies.get(\"Login\") ? (\n          <Redirect to=\"/admindashboard\" />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      )} />\n      <Route path=\"/admindashboard\" component={AdminDashboard} />\n\n      {/*  Routes For Subjects Management */}\n      <Route exact path=\"/managesubjects\" component={SubjectsManagement} />\n      <Route path=\"/addsubject\" component={AddSubjects} />\n      <Route path=\"/addcoursescategories\" component={AddCoursesCategories} />\n      <Route path=\"/addchapter/:subjectname/:subjectorder/:subjectid\" component={AddChapters} />\n      <Route path=\"/addtopic/:subjectid/:subjectname/:subjectorder/:chapterid/:chaptername/:chapterindex\" component={AddTopics} />\n      <Route path=\"/editsubject/:subjectid/:subjectname/:subjectorder/:subjectsem/:subjectcourse/:subjectbranch\" component={EditSubject} />\n      <Route path=\"/editchapter/:subjectid/:chapterid/:chaptername/:chapterorder/:subjectname/:subjectorder\" component={EditChapter} />\n      <Route path=\"/edittopic/:topicname/:topicorder/:topicdescription/:chaptername/:subjectid/:subjectname/:subjectorder/:chapterid/:chapterindex\" component={EditTopic} />\n\n      {/*  Routes For Courses Management */}\n      <Route path=\"/managecourses\" component={CoursesManagement} />\n      <Route path=\"/addcourse\" component={AddCourses} />\n      <Route path=\"/addcoursestypes\" component={AddCoursesTypes} />\n      <Route path=\"/addcoursetopic/:courseid\" component={AddCourseTopics} />\n      <Route path=\"/editcourse/:courseid/:coursename/:courseorder/:coursetype/:coursedescription\" component={EditCourse} />\n      <Route path=\"/editcoursetopic/:courseid/:coursetopicid/:coursetopicname/:coursetopicorder/:coursetopicdescription\" component={EditCourseTopic} />\n\n      {/* Routes For Extra Function */}\n      <Route path=\"/settings\" component={Settings} />\n      <Route path=\"/reports\" component={Reports} />\n      <Route path=\"/feedback\" component={Feedback} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"*\" component={NotFound} />\n      {/* <Route path=\"/register\" component={Register} /> */}\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}